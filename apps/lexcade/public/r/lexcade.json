{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "lexcade",
  "type": "registry:style",
  "dependencies": [
    "@radix-ui/react-avatar",
    "@radix-ui/react-collapsible",
    "@radix-ui/react-dialog",
    "@radix-ui/react-dropdown-menu",
    "@radix-ui/react-label",
    "@radix-ui/react-radio-group",
    "@radix-ui/react-scroll-area",
    "@radix-ui/react-select",
    "@radix-ui/react-separator",
    "@radix-ui/react-slot",
    "@radix-ui/react-switch",
    "@radix-ui/react-tabs",
    "@radix-ui/react-tooltip",
    "@remixicon/react",
    "next-themes",
    "react-aria-components",
    "recharts"
  ],
  "devDependencies": [
    "tw-animate-css"
  ],
  "files": [
    {
      "path": "app/layout.tsx",
      "content": "import { Geist, Geist_Mono } from \"next/font/google\";\nimport { ThemeProvider } from \"../providers/theme-provider\";\nimport \"./globals.css\";\n\nconst geistSans = Geist({\n  variable: \"--font-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-mono\",\n  subsets: [\"latin\"],\n});\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} font-sans antialiased`}\n      >\n        <ThemeProvider\n          attribute=\"class\"\n          defaultTheme=\"system\"\n          enableSystem\n          disableTransitionOnChange\n        >\n          {children}\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/layout.tsx"
    },
    {
      "path": "app/page.tsx",
      "content": "import type { Metadata } from \"next\";\n\nexport const metadata: Metadata = {\n  title: \"Experiment 04 - Crafted.is\",\n};\n\nimport { useId } from \"react\";\nimport { AppSidebar } from \"@/components/app-sidebar\";\nimport { SidebarInset, SidebarProvider } from \"@/components/ui/sidebar\";\nimport { Input } from \"@/components/ui/input\";\nimport UserDropdown from \"@/components/user-dropdown\";\nimport { RiSearch2Line } from \"@remixicon/react\";\nimport ThemeToggle from \"@/components/theme-toggle\";\nimport { Converter } from \"@/components/converter\";\nimport { CoinChart } from \"@/components/coin-chart\";\nimport { TransactionsTable } from \"@/components/transactions-table\";\n\nexport default function Page() {\n  const id = useId();\n\n  return (\n    <div className=\"flex h-svh\">\n      <SidebarProvider>\n        <AppSidebar />\n        <SidebarInset className=\"overflow-auto px-4 md:px-6 lg:px-8\">\n          <header className=\"bg-sidebar/90 backdrop-blur-sm sticky top-0 z-50 -mx-2 px-2\">\n            <div className=\"flex shrink-0 items-center gap-2 border-b py-4 w-full max-w-7xl mx-auto\">\n              <div className=\"flex-1\">\n                <div className=\"relative inline-flex\">\n                  <Input\n                    id={id}\n                    className=\"h-8 ps-9 pe-9 bg-border border-transparent w-fit min-w-65\"\n                    aria-label=\"Search\"\n                  />\n                  <div className=\"pointer-events-none absolute inset-y-0 start-0 flex items-center justify-center ps-2 text-muted-foreground peer-disabled:opacity-50\">\n                    <RiSearch2Line size={20} aria-hidden=\"true\" />\n                  </div>\n                  <div className=\"pointer-events-none absolute inset-y-0 end-0 flex items-center justify-center pe-2 text-muted-foreground\">\n                    <kbd className=\"inline-flex size-5 max-h-full items-center justify-center rounded bg-background shadow-xs px-1 font-[inherit] text-[0.625rem] font-medium text-muted-foreground/70\">\n                      /\n                    </kbd>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-4\">\n                <ThemeToggle />\n                <UserDropdown />\n              </div>\n            </div>\n          </header>\n          <div className=\"flex max-lg:flex-col flex-1 gap-6 py-6 w-full max-w-7xl mx-auto\">\n            {/* Converter widget */}\n            <div className=\"lg:order-1 lg:w-90 shrink-0\">\n              <Converter />\n            </div>\n            {/* Chart and table */}\n            <div className=\"flex-1 flex flex-col gap-6 min-w-0\">\n              <CoinChart />\n              <TransactionsTable />\n            </div>\n          </div>\n        </SidebarInset>\n      </SidebarProvider>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx"
    },
    {
      "path": "components/app-sidebar.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport Link from \"next/link\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarHeader,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n} from \"@/components/ui/sidebar\";\n\nconst basePath = \"https://raw.githubusercontent.com/origin-space/origin-images/refs/heads/main/exp4/\";\n\n// This is sample data\nconst navigationItems = [\n  {\n    title: \"ArkFi\",\n    url: \"#\",\n    icon: [\n      \"coin-01-light_mfrp33.svg\",\n      \"coin-01-dark_k0xthz.svg\",\n    ],\n    isActive: true,\n  },\n  {\n    title: \"Solaris\",\n    url: \"#\",\n    icon: [\n      \"coin-02-light_wbsrxl.svg\",\n      \"coin-02-dark_l7j3yv.svg\",\n    ],\n  },\n  {\n    title: \"Nexus\",\n    url: \"#\",\n    icon: [\n      \"coin-03-light_dvkbrk.svg\",\n      \"coin-03-dark_htjbyp.svg\",\n    ],\n  },\n];\n\nexport function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\n  return (\n    <Sidebar collapsible=\"none\" className=\"w-16 sm:w-20 border-r\" {...props}>\n      <SidebarHeader className=\"items-center py-4\">\n        <Link className=\"inline-flex\" href=\"/\" aria-label=\"Go to homepage\">\n          <svg\n            className=\"text-foreground\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"32\"\n            height=\"32\"\n            fill=\"currentColor\"\n          >\n            <title>Logo</title>\n            <path d=\"M16.8 32c8.465-.417 15.2-7.417 15.2-15.99 0-2.631-.634-5.114-1.758-7.304-4.506 2.604-6.76 3.905-8.463 5.66a17.614 17.614 0 0 0-4.313 7.474C16.8 24.193 16.8 26.796 16.8 32Zm-1.6 0C6.735 31.583 0 24.583 0 16.01c0-2.631.634-5.114 1.758-7.304 4.506 2.604 6.76 3.905 8.463 5.66a17.613 17.613 0 0 1 4.313 7.474c.666 2.353.666 4.956.666 10.16ZM2.56 7.32c4.505 2.604 6.758 3.905 9.129 4.505 2.83.715 5.793.715 8.622 0 2.371-.6 4.624-1.901 9.13-4.504C26.59 2.915 21.635 0 16 0 10.365 0 5.41 2.915 2.56 7.32Z\" />\n          </svg>\n        </Link>\n      </SidebarHeader>\n      <SidebarContent className=\"overflow-visible\">\n        <SidebarGroup className=\"p-4\">\n          <SidebarMenu className=\"gap-4\">\n            {navigationItems.map((item) => (\n              <SidebarMenuItem\n                key={item.title}\n                className=\"flex items-center justify-center\"\n              >\n                <span className=\"relative has-data-[active=true]:before:absolute has-data-[active=true]:before:inset-0 has-data-[active=true]:before:rounded-full has-data-[active=true]:before:bg-sidebar-primary/48 has-data-[active=true]:before:blur-[10px] has-data-[active=true]:before:-left-2 has-data-[active=true]:after:absolute has-data-[active=true]:after:size-1 has-data-[active=true]:after:bg-foreground has-data-[active=true]:after:rounded-full has-data-[active=true]:after:right-full has-data-[active=true]:after:top-1/2 has-data-[active=true]:after:-translate-y-1/2 has-data-[active=true]:after:-translate-x-2\">\n                  <SidebarMenuButton\n                    asChild\n                    className=\"relative size-9 sm:size-11 p-0 items-center justify-center rounded-full bg-linear-to-b from-background/64 to-background dark:bg-none dark:bg-card/64 dark:hover:bg-card/80 shadow-[0_1px_1px_rgba(0,0,0,0.05),_0_2px_2px_rgba(0,0,0,0.05),_0_4px_4px_rgba(0,0,0,0.05),_0_6px_6px_rgba(0,0,0,0.05)] dark:inset-shadow-[0_1px_rgb(255_255_255/0.15)]\"\n                    tooltip={{\n                      children: item.title,\n                      hidden: false,\n                    }}\n                    isActive={item.isActive}\n                  >\n                    <a href={item.url}>\n                      <img\n                        className=\"dark:hidden\"\n                        src={basePath + item.icon[0]}\n                        alt={item.title}\n                      />\n                      <img\n                        className=\"hidden dark:block\"\n                        src={basePath + item.icon[1]}\n                        alt={item.title}\n                      />\n                      <span className=\"sr-only\">{item.title}</span>\n                    </a>\n                  </SidebarMenuButton>\n                </span>\n              </SidebarMenuItem>\n            ))}\n          </SidebarMenu>\n        </SidebarGroup>\n      </SidebarContent>\n    </Sidebar>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/coin-chart.tsx",
      "content": "\"use client\";\n\nimport { useId, useState } from \"react\";\nimport {\n  CartesianGrid,\n  Line,\n  LineChart,\n  Rectangle,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport {\n  ChartConfig,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\n\nconst hourlyData = [\n  { date: \"2025-03-12\", time: \"3:00 PM\", value: 1181008 },\n  { date: \"2025-03-12\", time: \"4:00 PM\", value: 1182003 },\n  { date: \"2025-03-12\", time: \"5:00 PM\", value: 1182007 },\n  { date: \"2025-03-12\", time: \"6:00 PM\", value: 1184000 },\n  { date: \"2025-03-12\", time: \"7:00 PM\", value: 1183003 },\n  { date: \"2025-03-12\", time: \"8:00 PM\", value: 1183005 },\n  { date: \"2025-03-12\", time: \"9:00 PM\", value: 1185001 },\n  { date: \"2025-03-12\", time: \"10:00 PM\", value: 1188007 },\n  { date: \"2025-03-12\", time: \"11:00 PM\", value: 1184000 },\n  { date: \"2025-03-13\", time: \"12:00 AM\", value: 1186002 },\n  { date: \"2025-03-13\", time: \"1:00 AM\", value: 1182005 },\n  { date: \"2025-03-13\", time: \"2:00 AM\", value: 1178005 },\n  { date: \"2025-03-13\", time: \"3:00 AM\", value: 1174005 },\n  { date: \"2025-03-13\", time: \"4:00 AM\", value: 1176005 },\n  { date: \"2025-03-13\", time: \"5:00 AM\", value: 1173008 },\n  { date: \"2025-03-13\", time: \"6:00 AM\", value: 1174005 },\n  { date: \"2025-03-13\", time: \"7:00 AM\", value: 1174000 },\n  { date: \"2025-03-13\", time: \"8:00 AM\", value: 1174006 },\n  { date: \"2025-03-13\", time: \"9:00 AM\", value: 1175004 },\n  { date: \"2025-03-13\", time: \"10:00 AM\", value: 1175008 },\n  { date: \"2025-03-13\", time: \"11:00 AM\", value: 1175005 },\n  { date: \"2025-03-13\", time: \"12:00 PM\", value: 1173100 },\n  { date: \"2025-03-13\", time: \"1:00 PM\", value: 1172700 },\n  { date: \"2025-03-13\", time: \"2:00 PM\", value: 1171600 },\n  { date: \"2025-03-13\", time: \"3:00 PM\", value: 1172600 },\n  { date: \"2025-03-13\", time: \"4:00 PM\", value: 1174000 },\n  { date: \"2025-03-13\", time: \"5:00 PM\", value: 1173800 },\n  { date: \"2025-03-13\", time: \"6:00 PM\", value: 1175500 },\n  { date: \"2025-03-13\", time: \"7:00 PM\", value: 1176000 },\n  { date: \"2025-03-13\", time: \"8:00 PM\", value: 1168100 },\n  { date: \"2025-03-13\", time: \"9:00 PM\", value: 1170400 },\n  { date: \"2025-03-13\", time: \"10:00 PM\", value: 1171000 },\n  { date: \"2025-03-13\", time: \"11:00 PM\", value: 1174900 },\n  { date: \"2025-03-14\", time: \"12:00 AM\", value: 1174200 },\n  { date: \"2025-03-14\", time: \"1:00 AM\", value: 1174000 },\n  { date: \"2025-03-14\", time: \"2:00 AM\", value: 1176000 },\n  { date: \"2025-03-14\", time: \"3:00 AM\", value: 1175500 },\n  { date: \"2025-03-14\", time: \"4:00 AM\", value: 1175800 },\n  { date: \"2025-03-14\", time: \"5:00 AM\", value: 1175400 },\n  { date: \"2025-03-14\", time: \"6:00 AM\", value: 1174000 },\n  { date: \"2025-03-14\", time: \"7:00 AM\", value: 1174500 },\n  { date: \"2025-03-14\", time: \"8:00 AM\", value: 1173800 },\n  { date: \"2025-03-14\", time: \"9:00 AM\", value: 1176500 },\n  { date: \"2025-03-14\", time: \"10:00 AM\", value: 1174500 },\n  { date: \"2025-03-14\", time: \"11:00 AM\", value: 1178500 },\n  { date: \"2025-03-14\", time: \"12:00 PM\", value: 1182500 },\n  { date: \"2025-03-14\", time: \"1:00 PM\", value: 1186200 },\n  { date: \"2025-03-14\", time: \"2:00 PM\", value: 1184000 },\n  { date: \"2025-03-14\", time: \"3:00 PM\", value: 1188700 },\n  { date: \"2025-03-14\", time: \"4:00 PM\", value: 1185100 },\n  { date: \"2025-03-14\", time: \"5:00 PM\", value: 1183500 },\n  { date: \"2025-03-14\", time: \"6:00 PM\", value: 1183300 },\n  { date: \"2025-03-14\", time: \"7:00 PM\", value: 1184000 },\n  { date: \"2025-03-14\", time: \"8:00 PM\", value: 1182700 },\n  { date: \"2025-03-14\", time: \"9:00 PM\", value: 1182300 },\n  { date: \"2025-03-14\", time: \"10:00 PM\", value: 1181800 },\n  { date: \"2025-03-14\", time: \"11:00 PM\", value: 1184000 },\n  { date: \"2025-03-15\", time: \"12:00 AM\", value: 1181700 },\n  { date: \"2025-03-15\", time: \"1:00 AM\", value: 1180800 },\n  { date: \"2025-03-15\", time: \"2:00 AM\", value: 1177400 },\n  { date: \"2025-03-15\", time: \"3:00 AM\", value: 1177800 },\n  { date: \"2025-03-15\", time: \"4:00 AM\", value: 1180500 },\n  { date: \"2025-03-15\", time: \"5:00 AM\", value: 1181200 },\n  { date: \"2025-03-15\", time: \"6:00 AM\", value: 1180100 },\n  { date: \"2025-03-15\", time: \"7:00 AM\", value: 1183800 },\n  { date: \"2025-03-15\", time: \"8:00 AM\", value: 1183100 },\n  { date: \"2025-03-15\", time: \"9:00 AM\", value: 1182500 },\n  { date: \"2025-03-15\", time: \"10:00 AM\", value: 1186300 },\n  { date: \"2025-03-15\", time: \"11:00 AM\", value: 1188300 },\n  { date: \"2025-03-15\", time: \"12:00 PM\", value: 1191000 },\n  { date: \"2025-03-15\", time: \"1:00 PM\", value: 1190200 },\n  { date: \"2025-03-15\", time: \"2:00 PM\", value: 1190300 },\n  { date: \"2025-03-15\", time: \"3:00 PM\", value: 1189200 },\n  { date: \"2025-03-15\", time: \"4:00 PM\", value: 1187900 },\n  { date: \"2025-03-15\", time: \"5:00 PM\", value: 1186600 },\n  { date: \"2025-03-15\", time: \"6:00 PM\", value: 1187600 },\n  { date: \"2025-03-15\", time: \"7:00 PM\", value: 1189200 },\n  { date: \"2025-03-15\", time: \"8:00 PM\", value: 1190700 },\n  { date: \"2025-03-15\", time: \"9:00 PM\", value: 1184800 },\n  { date: \"2025-03-15\", time: \"10:00 PM\", value: 1183900 },\n  { date: \"2025-03-15\", time: \"11:00 PM\", value: 1188600 },\n  { date: \"2025-03-16\", time: \"12:00 AM\", value: 1186800 },\n  { date: \"2025-03-16\", time: \"1:00 AM\", value: 1187600 },\n  { date: \"2025-03-16\", time: \"2:00 AM\", value: 1180500 },\n  { date: \"2025-03-16\", time: \"3:00 AM\", value: 1172200 },\n  { date: \"2025-03-16\", time: \"4:00 AM\", value: 1176700 },\n  { date: \"2025-03-16\", time: \"5:00 AM\", value: 1176000 },\n  { date: \"2025-03-16\", time: \"6:00 AM\", value: 1176100 },\n  { date: \"2025-03-16\", time: \"7:00 AM\", value: 1177500 },\n  { date: \"2025-03-16\", time: \"8:00 AM\", value: 1179900 },\n  { date: \"2025-03-16\", time: \"9:00 AM\", value: 1177800 },\n  { date: \"2025-03-16\", time: \"10:00 AM\", value: 1177000 },\n  { date: \"2025-03-16\", time: \"11:00 AM\", value: 1174900 },\n  { date: \"2025-03-16\", time: \"12:00 PM\", value: 1181500 },\n  { date: \"2025-03-16\", time: \"1:00 PM\", value: 1182300 },\n  { date: \"2025-03-16\", time: \"2:00 PM\", value: 1181900 },\n  { date: \"2025-03-16\", time: \"3:00 PM\", value: 1181100 },\n  { date: \"2025-03-16\", time: \"4:00 PM\", value: 1183900 },\n  { date: \"2025-03-16\", time: \"5:00 PM\", value: 1188100 },\n  { date: \"2025-03-16\", time: \"6:00 PM\", value: 1189900 },\n  { date: \"2025-03-16\", time: \"7:00 PM\", value: 1181500 },\n  { date: \"2025-03-16\", time: \"8:00 PM\", value: 1185700 },\n  { date: \"2025-03-16\", time: \"9:00 PM\", value: 1186300 },\n  { date: \"2025-03-16\", time: \"10:00 PM\", value: 1188700 },\n  { date: \"2025-03-16\", time: \"11:00 PM\", value: 1188600 },\n  { date: \"2025-03-17\", time: \"12:00 AM\", value: 1187400 },\n  { date: \"2025-03-17\", time: \"1:00 AM\", value: 1187600 },\n  { date: \"2025-03-17\", time: \"2:00 AM\", value: 1187600 },\n  { date: \"2025-03-17\", time: \"3:00 AM\", value: 1186300 },\n  { date: \"2025-03-17\", time: \"4:00 AM\", value: 1186300 },\n  { date: \"2025-03-17\", time: \"5:00 AM\", value: 1184100 },\n  { date: \"2025-03-17\", time: \"6:00 AM\", value: 1187600 },\n  { date: \"2025-03-17\", time: \"7:00 AM\", value: 1187600 },\n  { date: \"2025-03-17\", time: \"8:00 AM\", value: 1186300 },\n  { date: \"2025-03-17\", time: \"9:00 AM\", value: 1186300 },\n  { date: \"2025-03-17\", time: \"10:00 AM\", value: 1184100 },\n  { date: \"2025-03-17\", time: \"11:00 AM\", value: 1184700 },\n  { date: \"2025-03-17\", time: \"12:00 PM\", value: 1187000 },\n  { date: \"2025-03-17\", time: \"1:00 PM\", value: 1184500 },\n  { date: \"2025-03-17\", time: \"2:00 PM\", value: 1185100 },\n  { date: \"2025-03-17\", time: \"3:00 PM\", value: 1184700 },\n  { date: \"2025-03-17\", time: \"4:00 PM\", value: 1187200 },\n  { date: \"2025-03-17\", time: \"5:00 PM\", value: 1184200 },\n  { date: \"2025-03-17\", time: \"6:00 PM\", value: 1188300 },\n  { date: \"2025-03-17\", time: \"7:00 PM\", value: 1190200 },\n  { date: \"2025-03-17\", time: \"8:00 PM\", value: 1192800 },\n  { date: \"2025-03-17\", time: \"9:00 PM\", value: 1201300 },\n  { date: \"2025-03-17\", time: \"10:00 PM\", value: 1199900 },\n  { date: \"2025-03-17\", time: \"11:00 PM\", value: 1196800 },\n  { date: \"2025-03-18\", time: \"12:00 AM\", value: 1200200 },\n  { date: \"2025-03-18\", time: \"1:00 AM\", value: 1198200 },\n  { date: \"2025-03-18\", time: \"2:00 AM\", value: 1201100 },\n  { date: \"2025-03-18\", time: \"3:00 AM\", value: 1200300 },\n  { date: \"2025-03-18\", time: \"4:00 AM\", value: 1201200 },\n  { date: \"2025-03-18\", time: \"5:00 AM\", value: 1189800 },\n  { date: \"2025-03-18\", time: \"6:00 AM\", value: 1195200 },\n  { date: \"2025-03-18\", time: \"7:00 AM\", value: 1192200 },\n  { date: \"2025-03-18\", time: \"8:00 AM\", value: 1193400 },\n  { date: \"2025-03-18\", time: \"9:00 AM\", value: 1194900 },\n  { date: \"2025-03-18\", time: \"10:00 AM\", value: 1194100 },\n  { date: \"2025-03-18\", time: \"11:00 AM\", value: 1195600 },\n  { date: \"2025-03-18\", time: \"12:00 PM\", value: 1197100 },\n  { date: \"2025-03-18\", time: \"1:00 PM\", value: 1200300 },\n  { date: \"2025-03-18\", time: \"2:00 PM\", value: 1195900 },\n  { date: \"2025-03-18\", time: \"3:00 PM\", value: 1201300 },\n  { date: \"2025-03-18\", time: \"4:00 PM\", value: 1201500 },\n  { date: \"2025-03-18\", time: \"5:00 PM\", value: 1200600 },\n  { date: \"2025-03-18\", time: \"6:00 PM\", value: 1202300 },\n  { date: \"2025-03-18\", time: \"7:00 PM\", value: 1198400 },\n  { date: \"2025-03-18\", time: \"8:00 PM\", value: 1198500 },\n  { date: \"2025-03-18\", time: \"9:00 PM\", value: 1201300 },\n  { date: \"2025-03-18\", time: \"10:00 PM\", value: 1199800 },\n  { date: \"2025-03-18\", time: \"11:00 PM\", value: 1203100 },\n  { date: \"2025-03-19\", time: \"12:00 AM\", value: 1194100 },\n  { date: \"2025-03-19\", time: \"1:00 AM\", value: 1185200 },\n  { date: \"2025-03-19\", time: \"2:00 AM\", value: 1192100 },\n  { date: \"2025-03-19\", time: \"3:00 AM\", value: 1191100 },\n  { date: \"2025-03-19\", time: \"4:00 AM\", value: 1193100 },\n  { date: \"2025-03-19\", time: \"5:00 AM\", value: 1200400 },\n  { date: \"2025-03-19\", time: \"6:00 AM\", value: 1202200 },\n  { date: \"2025-03-19\", time: \"7:00 AM\", value: 1205100 },\n  { date: \"2025-03-19\", time: \"8:00 AM\", value: 1207700 },\n  { date: \"2025-03-19\", time: \"9:00 AM\", value: 1200000 },\n  { date: \"2025-03-19\", time: \"10:00 AM\", value: 1203000 },\n  { date: \"2025-03-19\", time: \"11:00 AM\", value: 1203000 },\n  { date: \"2025-03-19\", time: \"12:00 PM\", value: 1199300 },\n  { date: \"2025-03-19\", time: \"1:00 PM\", value: 1196200 },\n  { date: \"2025-03-19\", time: \"2:00 PM\", value: 1196900 },\n  { date: \"2025-03-19\", time: \"3:00 PM\", value: 1200100 },\n  { date: \"2025-03-19\", time: \"4:00 PM\", value: 1201800 },\n  { date: \"2025-03-19\", time: \"5:00 PM\", value: 1200600 },\n  { date: \"2025-03-19\", time: \"6:00 PM\", value: 1197500 },\n  { date: \"2025-03-19\", time: \"7:00 PM\", value: 1198300 },\n  { date: \"2025-03-19\", time: \"8:00 PM\", value: 1200000 },\n  { date: \"2025-03-19\", time: \"9:00 PM\", value: 1202100 },\n  { date: \"2025-03-19\", time: \"10:00 PM\", value: 1203700 },\n  { date: \"2025-03-19\", time: \"11:00 PM\", value: 1205500 },\n  { date: \"2025-03-20\", time: \"12:00 AM\", value: 1206000 },\n  { date: \"2025-03-20\", time: \"1:00 AM\", value: 1208400 },\n  { date: \"2025-03-20\", time: \"2:00 AM\", value: 1205200 },\n  { date: \"2025-03-20\", time: \"3:00 AM\", value: 1205900 },\n  { date: \"2025-03-20\", time: \"4:00 AM\", value: 1208100 },\n  { date: \"2025-03-20\", time: \"5:00 AM\", value: 1213200 },\n  { date: \"2025-03-20\", time: \"6:00 AM\", value: 1214800 },\n  { date: \"2025-03-20\", time: \"7:00 AM\", value: 1210700 },\n  { date: \"2025-03-20\", time: \"8:00 AM\", value: 1212300 },\n  { date: \"2025-03-20\", time: \"9:00 AM\", value: 1216600 },\n  { date: \"2025-03-20\", time: \"10:00 AM\", value: 1211500 },\n  { date: \"2025-03-20\", time: \"11:00 AM\", value: 1214600 },\n  { date: \"2025-03-20\", time: \"12:00 PM\", value: 1206400 },\n  { date: \"2025-03-20\", time: \"1:00 PM\", value: 1204300 },\n  { date: \"2025-03-20\", time: \"2:00 PM\", value: 1204700 },\n  { date: \"2025-03-20\", time: \"3:00 PM\", value: 1205700 },\n];\n\nconst dailyData = [\n  { date: \"2025-02-21\", value: 1150200 },\n  { date: \"2025-02-22\", value: 1157400 },\n  { date: \"2025-02-23\", value: 1149800 },\n  { date: \"2025-02-24\", value: 1143500 },\n  { date: \"2025-02-25\", value: 1152700 },\n  { date: \"2025-02-26\", value: 1168900 },\n  { date: \"2025-02-27\", value: 1162300 },\n  { date: \"2025-02-28\", value: 1175600 },\n  { date: \"2025-03-01\", value: 1169200 },\n  { date: \"2025-03-02\", value: 1176800 },\n  { date: \"2025-03-03\", value: 1182500 },\n  { date: \"2025-03-04\", value: 1167300 },\n  { date: \"2025-03-05\", value: 1160100 },\n  { date: \"2025-03-06\", value: 1178600 },\n  { date: \"2025-03-07\", value: 1191200 },\n  { date: \"2025-03-08\", value: 1183500 },\n  { date: \"2025-03-09\", value: 1175100 },\n  { date: \"2025-03-10\", value: 1182700 },\n  { date: \"2025-03-11\", value: 1194300 },\n  { date: \"2025-03-12\", value: 1185800 },\n  { date: \"2025-03-13\", value: 1186002 },\n  { date: \"2025-03-14\", value: 1174200 },\n  { date: \"2025-03-15\", value: 1181700 },\n  { date: \"2025-03-16\", value: 1186800 },\n  { date: \"2025-03-17\", value: 1187400 },\n  { date: \"2025-03-18\", value: 1200200 },\n  { date: \"2025-03-19\", value: 1194100 },\n  { date: \"2025-03-20\", value: 1206000 },\n];\n\nconst weeklyData = [\n  { date: \"2024-12-13\", value: 1132500 },\n  { date: \"2024-12-20\", value: 1127800 },\n  { date: \"2024-12-27\", value: 1143200 },\n  { date: \"2025-01-03\", value: 1138900 },\n  { date: \"2025-01-10\", value: 1145600 },\n  { date: \"2025-01-17\", value: 1156700 },\n  { date: \"2025-01-24\", value: 1149300 },\n  { date: \"2025-01-31\", value: 1162800 },\n  { date: \"2025-02-07\", value: 1158400 },\n  { date: \"2025-02-14\", value: 1167900 },\n  { date: \"2025-02-21\", value: 1172300 },\n  { date: \"2025-02-28\", value: 1150200 },\n  { date: \"2025-03-06\", value: 1175600 },\n  { date: \"2025-03-13\", value: 1178600 },\n  { date: \"2025-03-20\", value: 1186002 },\n  { date: \"2025-03-27\", value: 1206000 },\n];\n\nconst monthlyData = [\n  { date: \"2024-03-01\", value: 1148500 },\n  { date: \"2024-04-01\", value: 1145800 },\n  { date: \"2024-05-01\", value: 1138200 },\n  { date: \"2024-06-01\", value: 1138900 },\n  { date: \"2024-07-01\", value: 1132600 },\n  { date: \"2024-08-01\", value: 1136700 },\n  { date: \"2024-09-01\", value: 1138300 },\n  { date: \"2024-10-01\", value: 1132800 },\n  { date: \"2024-11-01\", value: 1148400 },\n  { date: \"2024-12-01\", value: 1142900 },\n  { date: \"2025-01-01\", value: 1157900 },\n  { date: \"2025-02-01\", value: 1162300 },\n  { date: \"2025-03-01\", value: 1169200 },\n];\n\nconst yearlyData = [\n  { date: \"2016-01-01\", value: 920500 },\n  { date: \"2017-01-01\", value: 967800 },\n  { date: \"2018-01-01\", value: 988200 },\n  { date: \"2019-01-01\", value: 998900 },\n  { date: \"2020-01-01\", value: 892600 },\n  { date: \"2021-01-01\", value: 916700 },\n  { date: \"2022-01-01\", value: 988300 },\n  { date: \"2023-01-01\", value: 1022800 },\n  { date: \"2024-01-01\", value: 1128400 },\n  { date: \"2025-01-01\", value: 1169200 },\n];\n\nconst formatDate = (dateStr: string, period: string) => {\n  const date = new Date(dateStr);\n  if (period === \"1d\") {\n    return date.toLocaleDateString(\"en-US\", { month: \"short\", day: \"numeric\" });\n  } else if (period === \"1w\") {\n    return date.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n    });\n  } else if (period === \"1m\") {\n    return date.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"short\",\n    });\n  } else if (period === \"1y\") {\n    return date.toLocaleDateString(\"en-US\", { year: \"numeric\" });\n  } else {\n    return dateStr;\n  }\n};\n\nconst chartConfig = {\n  value: {\n    label: \"Value\",\n    color: \"var(--chart-1)\",\n  },\n  projected: {\n    label: \"Projected\",\n    color: \"var(--chart-3)\",\n  },\n} satisfies ChartConfig;\n\nconst TIME_PERIOD_OPTIONS = [\"1h\", \"1d\", \"1w\", \"1m\", \"1y\"];\n\nconst ViewOption = ({ id, value }: { id: string; value: string }) => {\n  return (\n    <label className=\"relative z-10 inline-flex h-full min-w-8 cursor-pointer items-center justify-center px-2 whitespace-nowrap transition-colors select-none uppercase text-foreground has-data-[state=unchecked]:text-muted-foreground\">\n      {value}\n      <RadioGroupItem id={`${id}-${value}`} value={value} className=\"sr-only\" />\n    </label>\n  );\n};\n\ninterface CustomCursorProps {\n  fill?: string;\n  pointerEvents?: string;\n  height?: number;\n  points?: Array<{ x: number; y: number }>;\n  className?: string;\n}\n\nfunction CustomCursor(props: CustomCursorProps) {\n  const { fill, pointerEvents, height, points, className } = props;\n\n  if (!points || points.length === 0) {\n    return null;\n  }\n\n  const { x, y } = points[0]!;\n  return (\n    <>\n      <Rectangle\n        x={x - 12}\n        y={y}\n        fill={fill}\n        pointerEvents={pointerEvents}\n        width={24}\n        height={height}\n        className={className}\n        type=\"linear\"\n      />\n      <Rectangle\n        x={x - 1}\n        y={y}\n        fill={fill}\n        pointerEvents={pointerEvents}\n        width={1}\n        height={height}\n        className=\"recharts-tooltip-inner-cursor\"\n        type=\"linear\"\n      />\n    </>\n  );\n}\n\nexport function CoinChart() {\n  const id = useId();\n  const [selectedValue, setSelectedValue] = useState(\"1h\");\n  const selectedIndex = TIME_PERIOD_OPTIONS.indexOf(selectedValue);\n\n  // Determine which data set to use based on the selected time period\n  const getChartDataForTimePeriod = () => {\n    switch (selectedValue) {\n      case \"1h\":\n        return hourlyData;\n      case \"1d\":\n        return dailyData;\n      case \"1w\":\n        return weeklyData;\n      case \"1m\":\n        return monthlyData;\n      case \"1y\":\n        return yearlyData;\n      default:\n        return hourlyData;\n    }\n  };\n\n  const chartDataToUse = getChartDataForTimePeriod();\n\n  return (\n    <Card className=\"gap-4\">\n      <CardHeader>\n        <div className=\"flex flex-wrap items-center justify-between gap-3\">\n          <div className=\"space-y-0.5\">\n            <CardTitle>ArkFi</CardTitle>\n            <div className=\"font-bold text-3xl mb-1\">\n              <span className=\"text-xl text-muted-foreground\">$</span>\n              1,327,349.19\n            </div>\n            <div className=\"text-emerald-500 text-sm font-medium\">\n              ↗ $2,849.27 (+4%)\n            </div>\n          </div>\n          <div className=\"bg-muted dark:bg-background/50 inline-flex h-8 rounded-full p-1 shrink-0\">\n            <RadioGroup\n              value={selectedValue}\n              onValueChange={setSelectedValue}\n              className=\"group text-xs after:bg-background dark:after:bg-card/64 has-focus-visible:after:border-ring has-focus-visible:after:ring-ring/50 relative inline-grid grid-cols-[repeat(5,1fr)] items-center gap-0 font-medium after:absolute after:inset-y-0 after:w-1/5 after:rounded-full after:shadow-xs dark:after:inset-shadow-[0_1px_rgb(255_255_255/0.15)] after:transition-[translate,box-shadow] after:duration-300 after:[transition-timing-function:cubic-bezier(0.16,1,0.3,1)] has-focus-visible:after:ring-[3px] [&:after]:translate-x-[calc(var(--selected-index)*100%)]\"\n              data-state={selectedValue}\n              style={\n                {\n                  \"--selected-index\": selectedIndex,\n                } as React.CSSProperties\n              }\n            >\n              {TIME_PERIOD_OPTIONS.map((value) => (\n                <ViewOption key={value} id={id} value={value} />\n              ))}\n            </RadioGroup>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer\n          config={chartConfig}\n          className=\"aspect-auto h-72 w-full [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-(--chart-1)/10 [&_.recharts-rectangle.recharts-tooltip-inner-cursor]:fill-(--chart-1)/25 [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border dark:[&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-card [&_.recharts-cartesian-axis-line]:stroke-border dark:[&_.recharts-cartesian-axis-line]:stroke-card\"\n        >\n          <LineChart\n            accessibilityLayer\n            key={selectedValue}\n            data={chartDataToUse}\n            margin={{ left: 4, right: 12, top: 12 }}\n          >\n            <CartesianGrid vertical={false} strokeDasharray=\"2 2\" />\n            <XAxis\n              dataKey={selectedValue === \"1h\" ? \"time\" : \"date\"}\n              tickLine={false}\n              tickMargin={12}\n              minTickGap={40}\n              tickFormatter={(value) => formatDate(value, selectedValue)}\n            />\n            <YAxis\n              axisLine={false}\n              tickLine={false}\n              allowDataOverflow={true}\n              domain={[\"dataMin - 1000\", \"dataMax + 1000\"]}\n              tickFormatter={(value) => {\n                if (value === 0) return \"$0.00\";\n                return `$${(value / 1000).toLocaleString(\"en-US\", { maximumFractionDigits: 2 })}k`;\n              }}\n            />\n            <ChartTooltip\n              content={<ChartTooltipContent hideIndicator />}\n              cursor={<CustomCursor fill=\"var(--chart-1)\" />}\n              formatter={(value) =>\n                `$${Number(value).toLocaleString(\"en-US\", { maximumFractionDigits: 2 })}`\n              }\n            />\n            <Line\n              type=\"linear\"\n              dataKey=\"value\"\n              stroke=\"var(--color-value)\"\n              strokeWidth={2}\n              dot={false}\n              activeDot={{\n                r: 5,\n                fill: \"var(--chart-1)\",\n                stroke: \"var(--background)\",\n                strokeWidth: 2,\n              }}\n            />\n          </LineChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/converter.tsx",
      "content": "\"use client\";\n\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { RiSettings4Line, RiArrowDownLine } from \"@remixicon/react\";\nimport { I18nProvider, Input, Label, NumberField } from \"react-aria-components\";\nimport { cn } from \"@/lib/utils\";\n\ninterface ConverterFieldProps {\n  className?: string;\n  isLast?: boolean;\n  defaultValue: number;\n  balance: string;\n  defaultCoin: string;\n  coins: {\n    id: string;\n    name: string;\n    image: string;\n  }[];\n}\n\nfunction ConverterField({\n  className,\n  isLast,\n  defaultValue,\n  balance,\n  defaultCoin,\n  coins,\n}: ConverterFieldProps) {\n  return (\n    <>\n      {isLast && (\n        <div\n          className=\"size-10 flex items-center justify-center rounded-full bg-linear-to-b from-primary to-primary-to inset-shadow-[0_1px_rgb(255_255_255/0.15)] absolute top-1/2 -translate-y-1/2\"\n          aria-hidden=\"true\"\n        >\n          <RiArrowDownLine className=\"text-primary-foreground\" size={20} />\n        </div>\n      )}\n      <Card\n        className={cn(\n          \"relative w-full flex-row items-center justify-between gap-2 p-5 dark:bg-card/64\",\n          isLast\n            ? \"[mask-image:radial-gradient(ellipse_26px_24px_at_50%_0%,transparent_0,_transparent_24px,_black_25px)]\"\n            : \"[mask-image:radial-gradient(ellipse_26px_24px_at_50%_100%,transparent_0,_transparent_24px,_black_25px)]\",\n          className,\n        )}\n      >\n        {isLast && (\n          <div\n            className=\"absolute -top-px left-1/2 -translate-x-1/2 w-[50px] h-[25px] rounded-b-full border-b border-x border-white/15\"\n            aria-hidden=\"true\"\n          ></div>\n        )}\n        <div className=\"grow\">\n          <I18nProvider locale=\"en-US\">\n            <NumberField\n              defaultValue={defaultValue}\n              minValue={0}\n              formatOptions={{\n                minimumFractionDigits: 1,\n                maximumFractionDigits: 2,\n                useGrouping: true,\n              }}\n            >\n              <Label className=\"sr-only\">Amount</Label>\n              <Input className=\"w-full max-w-40 text-2xl font-semibold bg-transparent focus-visible:outline-none py-0.5 px-1 -ml-1 mb-0.5 focus:bg-card/64 rounded-lg appearance-none\" />\n            </NumberField>\n          </I18nProvider>\n          <div className=\"text-xs text-muted-foreground\">\n            <span className=\"text-muted-foreground/70\">Balance: </span>\n            {balance}\n          </div>\n        </div>\n        <div>\n          <Select defaultValue={defaultCoin}>\n            <SelectTrigger className=\"p-1 pr-2 h-8 rounded-full [&>span_svg]:text-muted-foreground/80 [&>span]:flex [&>span]:items-center [&>span]:gap-2 [&>span_svg]:shrink-0 border-0 bg-card/64 hover:bg-card/80 shadow-lg inset-shadow-[0_1px_rgb(255_255_255/0.15)]\">\n              <SelectValue placeholder=\"Select coin\" />\n            </SelectTrigger>\n            <SelectContent\n              className=\"dark bg-zinc-800 border-none shadow-black/10 inset-shadow-[0_1px_rgb(255_255_255/0.15)] [&_*[role=option]>span>svg]:text-muted-foreground/80 [&_*[role=option]]:ps-2 [&_*[role=option]]:pe-8 [&_*[role=option]>span]:start-auto [&_*[role=option]>span]:end-2 [&_*[role=option]>span]:flex [&_*[role=option]>span]:items-center [&_*[role=option]>span]:gap-2 [&_*[role=option]>span>svg]:shrink-0\"\n              align=\"center\"\n            >\n              {coins.map((coin) => (\n                <SelectItem key={coin.id} value={coin.id}>\n                  <img\n                    className=\"shrink-0 rounded-full shadow-[0px_0px_0px_1px_rgba(0,0,0,0.04),0_1px_1px_rgba(0,0,0,0.05),0_2px_2px_rgba(0,0,0,0.05),0_2px_4px_rgba(0,0,0,0.05)]\"\n                    src={coin.image}\n                    width={24}\n                    height={24}\n                    alt={coin.name}\n                  />\n                  <span className=\"truncate uppercase text-xs font-medium\">\n                    {coin.name}\n                  </span>\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n      </Card>\n    </>\n  );\n}\n\nexport function Converter() {\n  const coins = [\n    {\n      id: \"1\",\n      name: \"Ark\",\n      image:\n        \"https://raw.githubusercontent.com/origin-space/origin-images/refs/heads/main/exp4/coin-01-sm-dark_hkrvvm.svg\",\n    },\n    {\n      id: \"2\",\n      name: \"Tok\",\n      image:\n        \"https://raw.githubusercontent.com/origin-space/origin-images/refs/heads/main/exp4/coin-02-sm-dark_iqldgv.svg\",\n    },\n  ];\n\n  function ConverterContent() {\n    return (\n      <>\n        <div className=\"relative flex flex-col items-center gap-1 mb-4\">\n          <ConverterField\n            defaultValue={15494.9}\n            balance=\"24,579\"\n            defaultCoin=\"2\"\n            coins={coins}\n          />\n          <ConverterField\n            isLast\n            defaultValue={12984.2}\n            balance=\"1,379.2\"\n            defaultCoin=\"1\"\n            coins={coins}\n          />\n        </div>\n        <div className=\"mb-2 ps-3 uppercase text-muted-foreground/50 text-xs font-medium\">\n          Summary\n        </div>\n        <Card className=\"p-4 gap-0 rounded-[0.75rem]\">\n          <ul className=\"text-sm\">\n            <li className=\"flex items-center justify-between pb-3 mb-3 border-b border-card/50\">\n              <span className=\"text-muted-foreground\">Transaction Value</span>\n              <span className=\"font-medium\">$2,867</span>\n            </li>\n            <li className=\"flex items-center justify-between pb-3 mb-3 border-b border-card/50\">\n              <span className=\"text-muted-foreground\">Network Fees</span>\n              <span className=\"font-medium\">$31.2</span>\n            </li>\n            <li className=\"flex items-center justify-between pb-3 mb-3 border-b border-card/50\">\n              <span className=\"text-muted-foreground\">Order Net</span>\n              <span className=\"font-medium\">$2,898.2</span>\n            </li>\n          </ul>\n          <Button size=\"lg\" className=\"w-full\">\n            Confirm\n          </Button>\n          <div className=\"text-xs text-center uppercase mt-3\">\n            1 <span className=\"text-muted-foreground\">ARK =</span> 1,574.04{\" \"}\n            <span className=\"text-muted-foreground\">TOK</span>\n          </div>\n        </Card>\n      </>\n    );\n  }\n\n  return (\n    <Tabs defaultValue=\"tab-1\" className=\"flex-1 gap-5\">\n      <div className=\"flex items-center gap-2\">\n        <TabsList className=\"flex w-full bg-background dark:bg-card/64 p-0 shadow-md *:not-first:ms-px dark:inset-shadow-[0_1px_rgb(255_255_255/0.15)]\">\n          <TabsTrigger\n            value=\"tab-1\"\n            className=\"flex-1 data-[state=active]:shadow-none data-[state=active]:bg-transparent relative before:absolute before:inset-y-2 before:-left-px before:w-px before:bg-border dark:before:bg-card first:before:hidden\"\n          >\n            Convert\n          </TabsTrigger>\n          <TabsTrigger\n            value=\"tab-2\"\n            className=\"flex-1 data-[state=active]:shadow-none data-[state=active]:bg-transparent relative before:absolute before:inset-y-2 before:-left-px before:w-px before:bg-border dark:before:bg-card first:before:hidden\"\n          >\n            Buy\n          </TabsTrigger>\n          <TabsTrigger\n            value=\"tab-3\"\n            className=\"flex-1 data-[state=active]:shadow-none data-[state=active]:bg-transparent relative before:absolute before:inset-y-2 before:-left-px before:w-px before:bg-border dark:before:bg-card first:before:hidden\"\n          >\n            Send\n          </TabsTrigger>\n        </TabsList>\n        <Button\n          size=\"icon\"\n          variant=\"ghost\"\n          className=\"size-8 shrink-0 text-muted-foreground hover:text-foreground/80\"\n        >\n          <span className=\"sr-only\">Settings</span>\n          <RiSettings4Line className=\"size-5\" size={20} aria-hidden=\"true\" />\n        </Button>\n      </div>\n      <div className=\"dark bg-background dark:bg-secondary/64 rounded-2xl p-2\">\n        <TabsContent value=\"tab-1\">\n          <ConverterContent />\n        </TabsContent>\n        <TabsContent value=\"tab-2\">\n          <ConverterContent />\n        </TabsContent>\n        <TabsContent value=\"tab-3\">\n          <ConverterContent />\n        </TabsContent>\n      </div>\n    </Tabs>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/theme-toggle.tsx",
      "content": "\"use client\";\n\nimport { RiMoonClearLine, RiSunLine } from \"@remixicon/react\";\nimport { useTheme } from \"next-themes\";\nimport { useId, useState } from \"react\";\n\nexport default function ThemeToggle() {\n  const id = useId();\n  const { theme, setTheme } = useTheme();\n  const [system, setSystem] = useState(false);\n\n  const smartToggle = () => {\n    const prefersDarkScheme = window.matchMedia(\n      \"(prefers-color-scheme: dark)\",\n    ).matches;\n    if (theme === \"system\") {\n      setTheme(prefersDarkScheme ? \"light\" : \"dark\");\n      setSystem(false);\n    } else if (\n      (theme === \"light\" && !prefersDarkScheme) ||\n      (theme === \"dark\" && prefersDarkScheme)\n    ) {\n      setTheme(theme === \"light\" ? \"dark\" : \"light\");\n      setSystem(false);\n    } else {\n      setTheme(\"system\");\n      setSystem(true);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col justify-center\">\n      <input\n        type=\"checkbox\"\n        name=\"theme-toggle\"\n        id={id}\n        className=\"peer sr-only\"\n        checked={system}\n        onChange={smartToggle}\n        aria-label=\"Toggle dark mode\"\n      />\n      <label\n        className=\"text-muted-foreground hover:text-foreground/80 rounded peer-focus-visible:border-ring peer-focus-visible:ring-ring/50 relative inline-flex size-8 cursor-pointer items-center justify-center transition-[color,box-shadow] outline-none peer-focus-visible:ring-[3px]\"\n        htmlFor={id}\n        aria-hidden=\"true\"\n      >\n        <RiSunLine className=\"dark:hidden\" size={20} aria-hidden=\"true\" />\n        <RiMoonClearLine\n          className=\"hidden dark:block\"\n          size={20}\n          aria-hidden=\"true\"\n        />\n        <span className=\"sr-only\">Switch to system/light/dark version</span>\n      </label>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/transactions-table.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  RiArrowRightLine,\n  RiCheckLine,\n  RiCloseLine,\n  RiRefreshLine,\n  RiArrowLeftSLine,\n  RiArrowRightSLine,\n} from \"@remixicon/react\";\nimport { buttonVariants } from \"@/components/ui/button\";\nimport {\n  Pagination,\n  PaginationContent,\n  PaginationItem,\n  PaginationLink,\n} from \"@/components/ui/pagination\";\nimport { cn } from \"@/lib/utils\";\n\ninterface Transaction {\n  id: string;\n  date: string;\n  in: {\n    symbol: string;\n    name: string;\n    icon: string[];\n  };\n  out: {\n    symbol: string;\n    name: string;\n    icon: string[];\n  };\n  fees: string;\n  change: {\n    received: string;\n    spent: string;\n  };\n  status: \"completed\" | \"failed\";\n  spent: string;\n}\n\nconst basePath = \"https://raw.githubusercontent.com/dlzlfasou/image/upload/\";\n\nconst items: Transaction[] = [\n  {\n    id: \"1\",\n    date: \"17 Feb, 2025\",\n    in: {\n      symbol: \"ARK\",\n      name: \"ArkFi\",\n      icon: [\n        \"v1741861900/coin-01-sm-light_hgzpka.svg\",\n        \"v1741861900/coin-01-sm-dark_hkrvvm.svg\",\n      ],\n    },\n    out: {\n      symbol: \"TOK\",\n      name: \"Token\",\n      icon: [\n        \"v1741861900/coin-02-sm-light_t1qflr.svg\",\n        \"v1741861900/coin-02-sm-dark_iqldgv.svg\",\n      ],\n    },\n    fees: \"$31.2\",\n    change: {\n      received: \"14,972\",\n      spent: \"7,872.1\",\n    },\n    status: \"completed\",\n    spent: \"$2,867.14\",\n  },\n  {\n    id: \"2\",\n    date: \"17 Feb, 2025\",\n    in: {\n      symbol: \"ARK\",\n      name: \"ArkFi\",\n      icon: [\n        \"v1741861900/coin-01-sm-light_hgzpka.svg\",\n        \"v1741861900/coin-01-sm-dark_hkrvvm.svg\",\n      ],\n    },\n    out: {\n      symbol: \"TOK\",\n      name: \"Token\",\n      icon: [\n        \"v1741861900/coin-02-sm-light_t1qflr.svg\",\n        \"v1741861900/coin-02-sm-dark_iqldgv.svg\",\n      ],\n    },\n    fees: \"$22.3\",\n    change: {\n      received: \"19,883\",\n      spent: \"12,327\",\n    },\n    status: \"completed\",\n    spent: \"$21,314.24\",\n  },\n  {\n    id: \"3\",\n    date: \"17 Feb, 2025\",\n    in: {\n      symbol: \"ARK\",\n      name: \"ArkFi\",\n      icon: [\n        \"v1741861900/coin-01-sm-light_hgzpka.svg\",\n        \"v1741861900/coin-01-sm-dark_hkrvvm.svg\",\n      ],\n    },\n    out: {\n      symbol: \"TOK\",\n      name: \"Token\",\n      icon: [\n        \"v1741861900/coin-02-sm-light_t1qflr.svg\",\n        \"v1741861900/coin-02-sm-dark_iqldgv.svg\",\n      ],\n    },\n    fees: \"$7.4\",\n    change: {\n      received: \"12,487\",\n      spent: \"4,494.2\",\n    },\n    status: \"completed\",\n    spent: \"$1,429.1\",\n  },\n  {\n    id: \"4\",\n    date: \"17 Feb, 2025\",\n    in: {\n      symbol: \"ARK\",\n      name: \"ArkFi\",\n      icon: [\n        \"v1741861900/coin-01-sm-light_hgzpka.svg\",\n        \"v1741861900/coin-01-sm-dark_hkrvvm.svg\",\n      ],\n    },\n    out: {\n      symbol: \"TOK\",\n      name: \"Token\",\n      icon: [\n        \"v1741861900/coin-02-sm-light_t1qflr.svg\",\n        \"v1741861900/coin-02-sm-dark_iqldgv.svg\",\n      ],\n    },\n    fees: \"$42.1\",\n    change: {\n      received: \"13,229\",\n      spent: \"7,872.1\",\n    },\n    status: \"completed\",\n    spent: \"$3,411.21\",\n  },\n  {\n    id: \"5\",\n    date: \"17 Feb, 2025\",\n    in: {\n      symbol: \"ARK\",\n      name: \"ArkFi\",\n      icon: [\n        \"v1741861900/coin-01-sm-light_hgzpka.svg\",\n        \"v1741861900/coin-01-sm-dark_hkrvvm.svg\",\n      ],\n    },\n    out: {\n      symbol: \"TOK\",\n      name: \"Token\",\n      icon: [\n        \"v1741861900/coin-02-sm-light_t1qflr.svg\",\n        \"v1741861900/coin-02-sm-dark_iqldgv.svg\",\n      ],\n    },\n    fees: \"$24.7\",\n    change: {\n      received: \"14,457\",\n      spent: \"12,226\",\n    },\n    status: \"completed\",\n    spent: \"$12,317.9\",\n  },\n];\n\nexport function TransactionsTable() {\n  const [currentPage] = useState(1);\n  const totalPages = 12;\n\n  return (\n    <Card className=\"gap-4\">\n      <CardHeader>\n        <CardTitle>Transactions</CardTitle>\n      </CardHeader>\n      <CardContent className=\"px-0\">\n        <Table className=\"px-6 border-separate border-spacing-0 [&_tr_td]:border-b [&_tr_td]:border-border/64 dark:[&_tr_td]:border-card/80\">\n          <TableHeader>\n            <TableRow className=\"hover:bg-transparent border-0\">\n              <TableHead className=\"relative h-8 select-none bg-muted dark:bg-card/48 border-0 first:rounded-l-lg last:rounded-r-lg font-normal\">\n                Date\n              </TableHead>\n              <TableHead className=\"relative h-8 select-none bg-muted dark:bg-card/48 border-0 first:rounded-l-lg last:rounded-r-lg font-normal\">\n                Conversion\n              </TableHead>\n              <TableHead className=\"relative h-8 select-none bg-muted dark:bg-card/48 border-0 first:rounded-l-lg last:rounded-r-lg font-normal\">\n                Fees\n              </TableHead>\n              <TableHead className=\"relative h-8 select-none bg-muted dark:bg-card/48 border-0 first:rounded-l-lg last:rounded-r-lg font-normal\">\n                Change\n              </TableHead>\n              <TableHead className=\"relative h-8 select-none bg-muted dark:bg-card/48 border-0 first:rounded-l-lg last:rounded-r-lg font-normal text-center\">\n                Status\n              </TableHead>\n              <TableHead className=\"relative h-8 select-none bg-muted dark:bg-card/48 border-0 first:rounded-l-lg last:rounded-r-lg font-normal\">\n                Spent\n              </TableHead>\n              <TableHead className=\"relative h-8 select-none bg-muted dark:bg-card/48 border-0 first:rounded-l-lg last:rounded-r-lg font-normal text-center\">\n                Action\n              </TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {items.map((item) => (\n              <TableRow key={item.id} className=\"hover:bg-transparent\">\n                <TableCell className=\"text-foreground/70 whitespace-nowrap\">\n                  {item.date}\n                </TableCell>\n                <TableCell className=\"font-medium\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"flex items-center gap-2\">\n                      <div className=\"max-[1320px]:hidden shrink-0 rounded-full shadow-xs\">\n                        <img\n                          className=\"dark:hidden\"\n                          src={basePath + item.in.icon[0]}\n                          alt={item.in.name}\n                        />\n                        <img\n                          className=\"hidden dark:block\"\n                          src={basePath + item.in.icon[1]}\n                          alt={item.in.name}\n                        />\n                      </div>\n                      <span>{item.in.symbol}</span>\n                    </div>\n                    <RiArrowRightLine\n                      size={16}\n                      className=\"text-muted-foreground/50\"\n                      aria-hidden=\"true\"\n                    />\n                    <div className=\"flex items-center gap-2\">\n                      <div className=\"max-[1320px]:hidden shrink-0 rounded-full shadow-xs\">\n                        <img\n                          className=\"dark:hidden\"\n                          src={basePath + item.out.icon[0]}\n                          alt={item.out.name}\n                        />\n                        <img\n                          className=\"hidden dark:block\"\n                          src={basePath + item.out.icon[1]}\n                          alt={item.out.name}\n                        />\n                      </div>\n                      <span>{item.out.symbol}</span>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell className=\"text-foreground/70\">\n                  {item.fees}\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center gap-3\">\n                    <Badge className=\"text-sm font-normal bg-emerald-500/12 text-emerald-600 border-0 py-0.5 px-2\">\n                      {item.change.received}\n                    </Badge>\n                    <RiArrowRightLine\n                      size={16}\n                      className=\"text-muted-foreground/50\"\n                      aria-hidden=\"true\"\n                    />\n                    <Badge className=\"text-sm font-normal bg-red-500/12 text-red-500 border-0 py-0.5 px-2\">\n                      {item.change.spent}\n                    </Badge>\n                  </div>\n                </TableCell>\n                <TableCell className=\"text-center\">\n                  {item.status === \"completed\" && (\n                    <>\n                      <span className=\"sr-only\">Completed</span>\n                      <RiCheckLine\n                        size={16}\n                        className=\"inline-flex text-emerald-500\"\n                      />\n                    </>\n                  )}\n                  {item.status === \"failed\" && (\n                    <>\n                      <span className=\"sr-only\">Failed</span>\n                      <RiCloseLine\n                        size={16}\n                        className=\"inline-flex text-red-500\"\n                      />\n                    </>\n                  )}\n                </TableCell>\n                <TableCell className=\"font-medium\">{item.spent}</TableCell>\n                <TableCell className=\"py-0 text-center\">\n                  <Button\n                    size=\"icon\"\n                    variant=\"ghost\"\n                    className=\"shadow-none text-muted-foreground/50 dark:hover:bg-card/64\"\n                    aria-label=\"Edit item\"\n                  >\n                    <RiRefreshLine size={16} aria-hidden=\"true\" />\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <Pagination className=\"mt-5 px-6\">\n          <PaginationContent className=\"w-full justify-between\">\n            <PaginationItem>\n              <PaginationLink\n                className={cn(\n                  buttonVariants({\n                    variant: \"outline\",\n                  }),\n                  \"size-8 p-0 aria-disabled:pointer-events-none aria-disabled:text-muted-foreground/50 border-none hover:bg-muted/50 dark:bg-card/64 dark:hover:bg-card/80 shadow-[0px_0px_0px_1px_rgba(0,0,0,0.04),0_1px_1px_rgba(0,0,0,0.05),0_2px_2px_rgba(0,0,0,0.05),0_2px_4px_rgba(0,0,0,0.05)] dark:inset-shadow-[0_1px_rgb(255_255_255/0.15)]\",\n                )}\n                href={\n                  currentPage === 1 ? undefined : `#/page/${currentPage - 1}`\n                }\n                aria-label=\"Go to previous page\"\n                aria-disabled={currentPage === 1 ? true : undefined}\n                role={currentPage === 1 ? \"link\" : undefined}\n              >\n                <RiArrowLeftSLine\n                  className=\"size-5\"\n                  size={20}\n                  aria-hidden=\"true\"\n                />\n              </PaginationLink>\n            </PaginationItem>\n            <PaginationItem>\n              <p className=\"text-muted-foreground text-sm\" aria-live=\"polite\">\n                Page <span className=\"text-foreground\">{currentPage}</span> of{\" \"}\n                <span className=\"text-foreground\">{totalPages}</span>\n              </p>\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink\n                className={cn(\n                  buttonVariants({\n                    variant: \"outline\",\n                  }),\n                  \"size-8 p-0 aria-disabled:pointer-events-none aria-disabled:text-muted-foreground/50 border-none hover:bg-muted/50 dark:bg-card/64 dark:hover:bg-card/80 shadow-[0px_0px_0px_1px_rgba(0,0,0,0.04),0_1px_1px_rgba(0,0,0,0.05),0_2px_2px_rgba(0,0,0,0.05),0_2px_4px_rgba(0,0,0,0.05)] dark:inset-shadow-[0_1px_rgb(255_255_255/0.15)]\",\n                )}\n                href={\n                  currentPage === totalPages\n                    ? undefined\n                    : `#/page/${currentPage + 1}`\n                }\n                aria-label=\"Go to next page\"\n                aria-disabled={currentPage === totalPages ? true : undefined}\n                role={currentPage === totalPages ? \"link\" : undefined}\n              >\n                <RiArrowRightSLine\n                  className=\"size-5\"\n                  size={20}\n                  aria-hidden=\"true\"\n                />\n              </PaginationLink>\n            </PaginationItem>\n          </PaginationContent>\n        </Pagination>\n      </CardContent>\n    </Card>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/user-dropdown.tsx",
      "content": "import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\n\nimport { RiGlobalLine, RiWalletLine, RiLogoutBoxLine } from \"@remixicon/react\";\n\nexport default function UserDropdown() {\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button\n          variant=\"ghost\"\n          className=\"h-auto p-0 hover:bg-transparent rounded-full\"\n        >\n          <Avatar>\n            <AvatarImage\n              src=\"https://raw.githubusercontent.com/origin-space/origin-images/refs/heads/main/exp4/user_i02xph.png\"\n              width={32}\n              height={32}\n              alt=\"Profile image\"\n            />\n            <AvatarFallback>LB</AvatarFallback>\n          </Avatar>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent className=\"max-w-64 dark:border-none\" align=\"end\">\n        <DropdownMenuLabel className=\"flex min-w-0 flex-col\">\n          <span className=\"truncate text-sm font-medium text-foreground\">\n            Lucy Bennett\n          </span>\n          <span className=\"truncate text-xs font-normal text-muted-foreground\">\n            l.bennett@originui.com\n          </span>\n        </DropdownMenuLabel>\n        <DropdownMenuSeparator className=\"dark:bg-white/8\" />\n        <DropdownMenuGroup>\n          <DropdownMenuItem>\n            <RiGlobalLine size={16} className=\"opacity-60\" aria-hidden=\"true\" />\n            <span>Currency</span>\n          </DropdownMenuItem>\n          <DropdownMenuItem>\n            <RiWalletLine size={16} className=\"opacity-60\" aria-hidden=\"true\" />\n            <span>Wallet</span>\n          </DropdownMenuItem>\n        </DropdownMenuGroup>\n        <DropdownMenuSeparator className=\"dark:bg-white/8\" />\n        <DropdownMenuItem>\n          <RiLogoutBoxLine\n            size={16}\n            className=\"opacity-60\"\n            aria-hidden=\"true\"\n          />\n          <span>Sign out</span>\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/avatar.tsx",
      "content": "\"use client\";\n\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Avatar({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Root>) {\n  return (\n    <AvatarPrimitive.Root\n      data-slot=\"avatar\"\n      className={cn(\n        \"relative flex size-8 shrink-0 overflow-hidden rounded-full\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarImage({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Image>) {\n  return (\n    <AvatarPrimitive.Image\n      data-slot=\"avatar-image\"\n      className={cn(\"aspect-square size-full\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarFallback({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        \"bg-secondary flex size-full items-center justify-center rounded-[inherit] text-xs\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Avatar, AvatarFallback, AvatarImage };\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/badge.tsx",
      "content": "import { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-full border px-1.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] transition-[color,box-shadow] [&>svg]:shrink-0 leading-normal\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\";\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nexport { Badge, badgeVariants };\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/breadcrumb.tsx",
      "content": "import { Slot } from \"@radix-ui/react-slot\";\nimport { ChevronRightIcon, MoreHorizontal } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Breadcrumb({ ...props }: React.ComponentProps<\"nav\">) {\n  return <nav aria-label=\"breadcrumb\" data-slot=\"breadcrumb\" {...props} />;\n}\n\nfunction BreadcrumbList({ className, ...props }: React.ComponentProps<\"ol\">) {\n  return (\n    <ol\n      data-slot=\"breadcrumb-list\"\n      className={cn(\n        \"text-muted-foreground flex flex-wrap items-center gap-1.5 text-sm break-words sm:gap-2.5\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction BreadcrumbItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"breadcrumb-item\"\n      className={cn(\"inline-flex items-center gap-1.5\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction BreadcrumbLink({\n  asChild,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean;\n}) {\n  const Comp = asChild ? Slot : \"a\";\n\n  return (\n    <Comp\n      data-slot=\"breadcrumb-link\"\n      className={cn(\"hover:text-foreground transition-colors\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction BreadcrumbPage({ className, ...props }: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"breadcrumb-page\"\n      role=\"link\"\n      aria-disabled=\"true\"\n      aria-current=\"page\"\n      className={cn(\"text-foreground font-normal\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction BreadcrumbSeparator({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"breadcrumb-separator\"\n      role=\"presentation\"\n      aria-hidden=\"true\"\n      className={className}\n      {...props}\n    >\n      {children ?? <ChevronRightIcon size={16} />}\n    </li>\n  );\n}\n\nfunction BreadcrumbEllipsis({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"breadcrumb-ellipsis\"\n      role=\"presentation\"\n      aria-hidden=\"true\"\n      className={cn(\"flex size-5 items-center justify-center\", className)}\n      {...props}\n    >\n      <MoreHorizontal size={16} />\n      <span className=\"sr-only\">More</span>\n    </span>\n  );\n}\n\nexport {\n  Breadcrumb,\n  BreadcrumbEllipsis,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n};\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/button.tsx",
      "content": "import { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-linear-to-b from-primary to-primary-to text-primary-foreground shadow-sm bg-[length:100%_100%] bg-[bottom] hover:bg-[length:100%_150%] inset-shadow-[0_1px_rgb(255_255_255/0.15)] transition-all\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\n        outline:\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean;\n  }) {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  );\n}\n\nexport { Button, buttonVariants };\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/card.tsx",
      "content": "import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card dark:bg-card/44 text-card-foreground flex flex-col gap-6 rounded-xl py-5 shadow-lg dark:inset-shadow-[0_1px_rgb(255_255_255/0.15)]\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\"flex flex-col gap-1.5 px-6\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"font-semibold\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/chart.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as RechartsPrimitive from \"recharts\";\n\nimport { cn } from \"@/lib/utils\";\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const;\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode;\n    icon?: React.ComponentType;\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  );\n};\n\ntype ChartContextProps = {\n  config: ChartConfig;\n};\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null);\n\nfunction useChart() {\n  const context = React.useContext(ChartContext);\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\");\n  }\n\n  return context;\n}\n\nfunction ChartContainer({\n  id,\n  className,\n  children,\n  config,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  config: ChartConfig;\n  children: React.ComponentProps<\n    typeof RechartsPrimitive.ResponsiveContainer\n  >[\"children\"];\n}) {\n  const uniqueId = React.useId();\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`;\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-slot=\"chart\"\n        data-chart={chartId}\n        className={cn(\n          \"[&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground/70 dark:[&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground/50 [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border flex aspect-video justify-center text-xs [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-hidden [&_.recharts-sector]:outline-hidden [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-surface]:outline-hidden\",\n          className,\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  );\n}\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color,\n  );\n\n  if (!colorConfig.length) {\n    return null;\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color;\n    return color ? `  --color-${key}: ${color};` : null;\n  })\n  .join(\"\\n\")}\n}\n`,\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  );\n};\n\nconst ChartTooltip = RechartsPrimitive.Tooltip;\n\nfunction ChartTooltipContent({\n  active,\n  payload,\n  className,\n  indicator = \"dot\",\n  hideLabel = false,\n  hideIndicator = false,\n  label,\n  labelFormatter,\n  labelClassName,\n  formatter,\n  color,\n  nameKey,\n  labelKey,\n}: React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n  React.ComponentProps<\"div\"> & {\n    hideLabel?: boolean;\n    hideIndicator?: boolean;\n    indicator?: \"line\" | \"dot\" | \"dashed\";\n    nameKey?: string;\n    labelKey?: string;\n  }) {\n  const { config } = useChart();\n\n  const tooltipLabel = React.useMemo(() => {\n    if (hideLabel || !payload?.length) {\n      return null;\n    }\n\n    const [item] = payload;\n    const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`;\n    const itemConfig = getPayloadConfigFromPayload(config, item, key);\n    const value =\n      !labelKey && typeof label === \"string\"\n        ? config[label as keyof typeof config]?.label || label\n        : itemConfig?.label;\n\n    if (labelFormatter) {\n      return (\n        <div className={cn(\"font-medium\", labelClassName)}>\n          {labelFormatter(value, payload)}\n        </div>\n      );\n    }\n\n    if (!value) {\n      return null;\n    }\n\n    return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>;\n  }, [\n    label,\n    labelFormatter,\n    payload,\n    hideLabel,\n    labelClassName,\n    config,\n    labelKey,\n  ]);\n\n  if (!active || !payload?.length) {\n    return null;\n  }\n\n  const nestLabel = payload.length === 1 && indicator !== \"dot\";\n\n  return (\n    <div\n      className={cn(\n        \"border-border/50 bg-background/80 backdrop-blur-xs grid items-start gap-1.5 rounded-md border px-2.5 py-1.5 text-xs shadow-lg\",\n        className,\n      )}\n    >\n      {!nestLabel ? tooltipLabel : null}\n      <div className=\"grid gap-1.5\">\n        {payload.map((item, index) => {\n          const key = `${nameKey || item.name || item.dataKey || \"value\"}`;\n          const itemConfig = getPayloadConfigFromPayload(config, item, key);\n          const indicatorColor = color || item.payload.fill || item.color;\n\n          return (\n            <div\n              key={item.dataKey}\n              className={cn(\n                \"[&>svg]:text-muted-foreground flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5\",\n                indicator === \"dot\" && \"items-center\",\n              )}\n            >\n              {formatter && item?.value !== undefined && item.name ? (\n                formatter(item.value, item.name, item, index, item.payload)\n              ) : (\n                <>\n                  {itemConfig?.icon ? (\n                    <itemConfig.icon />\n                  ) : (\n                    !hideIndicator && (\n                      <div\n                        className={cn(\n                          \"shrink-0 rounded-[2px] border-(--color-border) bg-(--color-bg)\",\n                          {\n                            \"size-2.5\": indicator === \"dot\",\n                            \"w-1\": indicator === \"line\",\n                            \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                              indicator === \"dashed\",\n                            \"my-0.5\": nestLabel && indicator === \"dashed\",\n                          },\n                        )}\n                        style={\n                          {\n                            \"--color-bg\": indicatorColor,\n                            \"--color-border\": indicatorColor,\n                          } as React.CSSProperties\n                        }\n                      />\n                    )\n                  )}\n                  <div\n                    className={cn(\n                      \"flex flex-1 justify-between leading-none\",\n                      nestLabel ? \"items-end\" : \"items-center\",\n                    )}\n                  >\n                    <div className=\"grid gap-1.5\">\n                      {nestLabel ? tooltipLabel : null}\n                      <span className=\"text-muted-foreground\">\n                        {itemConfig?.label || item.name}\n                      </span>\n                    </div>\n                    {item.value && (\n                      <span className=\"text-foreground font-mono font-medium tabular-nums\">\n                        {item.value.toLocaleString()}\n                      </span>\n                    )}\n                  </div>\n                </>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nconst ChartLegend = RechartsPrimitive.Legend;\n\nfunction ChartLegendContent({\n  className,\n  hideIcon = false,\n  payload,\n  verticalAlign = \"bottom\",\n  nameKey,\n}: React.ComponentProps<\"div\"> &\n  Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n    hideIcon?: boolean;\n    nameKey?: string;\n  }) {\n  const { config } = useChart();\n\n  if (!payload?.length) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(\n        \"flex items-center justify-center gap-4\",\n        verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n        className,\n      )}\n    >\n      {payload.map((item) => {\n        const key = `${nameKey || item.dataKey || \"value\"}`;\n        const itemConfig = getPayloadConfigFromPayload(config, item, key);\n\n        return (\n          <div\n            key={item.value}\n            className={cn(\n              \"[&>svg]:text-muted-foreground flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3\",\n            )}\n          >\n            {itemConfig?.icon && !hideIcon ? (\n              <itemConfig.icon />\n            ) : (\n              <div\n                className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                style={{\n                  backgroundColor: item.color,\n                }}\n              />\n            )}\n            {itemConfig?.label}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string,\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined;\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined;\n\n  let configLabelKey: string = key;\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string;\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string;\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config];\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n};\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/collapsible.tsx",
      "content": "\"use client\";\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\";\n\nfunction Collapsible({\n  ...props\n}: React.ComponentProps<typeof CollapsiblePrimitive.Root>) {\n  return <CollapsiblePrimitive.Root data-slot=\"collapsible\" {...props} />;\n}\n\nfunction CollapsibleTrigger({\n  ...props\n}: React.ComponentProps<typeof CollapsiblePrimitive.CollapsibleTrigger>) {\n  return (\n    <CollapsiblePrimitive.CollapsibleTrigger\n      data-slot=\"collapsible-trigger\"\n      {...props}\n    />\n  );\n}\n\nfunction CollapsibleContent({\n  ...props\n}: React.ComponentProps<typeof CollapsiblePrimitive.CollapsibleContent>) {\n  return (\n    <CollapsiblePrimitive.CollapsibleContent\n      data-slot=\"collapsible-content\"\n      {...props}\n    />\n  );\n}\n\nexport { Collapsible, CollapsibleContent, CollapsibleTrigger };\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/dropdown-menu.tsx",
      "content": "\"use client\";\n\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\";\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\ntype PointerDownEvent = Parameters<\n  NonNullable<DropdownMenuPrimitive.DropdownMenuContentProps[\"onPointerDown\"]>\n>[0];\ntype PointerDownOutsideEvent = Parameters<\n  NonNullable<\n    DropdownMenuPrimitive.DropdownMenuContentProps[\"onPointerDownOutside\"]\n  >\n>[0];\n\nfunction DropdownMenu({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {\n  return <DropdownMenuPrimitive.Root data-slot=\"dropdown-menu\" {...props} />;\n}\n\nfunction DropdownMenuPortal({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {\n  return (\n    <DropdownMenuPrimitive.Portal data-slot=\"dropdown-menu-portal\" {...props} />\n  );\n}\n\nfunction DropdownMenuTrigger({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>) {\n  return (\n    <DropdownMenuPrimitive.Trigger\n      data-slot=\"dropdown-menu-trigger\"\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuContent({\n  className,\n  sideOffset = 4,\n  onPointerDown,\n  onPointerDownOutside,\n  onCloseAutoFocus,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {\n  const isCloseFromMouse = React.useRef<boolean>(false);\n\n  const handlePointerDown = React.useCallback(\n    (e: PointerDownEvent) => {\n      isCloseFromMouse.current = true;\n      onPointerDown?.(e);\n    },\n    [onPointerDown],\n  );\n\n  const handlePointerDownOutside = React.useCallback(\n    (e: PointerDownOutsideEvent) => {\n      isCloseFromMouse.current = true;\n      onPointerDownOutside?.(e);\n    },\n    [onPointerDownOutside],\n  );\n\n  const handleCloseAutoFocus = React.useCallback(\n    (e: Event) => {\n      if (onCloseAutoFocus) {\n        return onCloseAutoFocus(e);\n      }\n\n      if (!isCloseFromMouse.current) {\n        return;\n      }\n\n      e.preventDefault();\n      isCloseFromMouse.current = false;\n    },\n    [onCloseAutoFocus],\n  );\n\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.Content\n        data-slot=\"dropdown-menu-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-40 overflow-hidden rounded-md border p-1 shadow-lg\",\n          className,\n        )}\n        onPointerDown={handlePointerDown}\n        onPointerDownOutside={handlePointerDownOutside}\n        onCloseAutoFocus={handleCloseAutoFocus}\n        {...props}\n      />\n    </DropdownMenuPrimitive.Portal>\n  );\n}\n\nfunction DropdownMenuGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Group>) {\n  return (\n    <DropdownMenuPrimitive.Group data-slot=\"dropdown-menu-group\" {...props} />\n  );\n}\n\nfunction DropdownMenuItem({\n  className,\n  inset,\n  variant = \"default\",\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {\n  inset?: boolean;\n  variant?: \"default\" | \"destructive\";\n}) {\n  return (\n    <DropdownMenuPrimitive.Item\n      data-slot=\"dropdown-menu-item\"\n      data-inset={inset}\n      data-variant={variant}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive-foreground data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/40 data-[variant=destructive]:focus:text-destructive-foreground data-[variant=destructive]:*:[svg]:!text-destructive-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) {\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      data-slot=\"dropdown-menu-checkbox-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0\",\n        className,\n      )}\n      checked={checked}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CheckIcon size={16} />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  );\n}\n\nfunction DropdownMenuRadioGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>) {\n  return (\n    <DropdownMenuPrimitive.RadioGroup\n      data-slot=\"dropdown-menu-radio-group\"\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuRadioItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) {\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      data-slot=\"dropdown-menu-radio-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0\",\n        className,\n      )}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CircleIcon className=\"size-2 fill-current\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.RadioItem>\n  );\n}\n\nfunction DropdownMenuLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {\n  inset?: boolean;\n}) {\n  return (\n    <DropdownMenuPrimitive.Label\n      data-slot=\"dropdown-menu-label\"\n      data-inset={inset}\n      className={cn(\n        \"text-muted-foreground px-2 py-1.5 text-xs font-medium data-[inset]:pl-8\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) {\n  return (\n    <DropdownMenuPrimitive.Separator\n      data-slot=\"dropdown-menu-separator\"\n      className={cn(\"bg-border -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuShortcut({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <kbd\n      data-slot=\"dropdown-menu-shortcut\"\n      className={cn(\n        \"bg-background text-muted-foreground/70 ms-auto -me-1 inline-flex h-5 max-h-full items-center rounded border px-1 font-[inherit] text-[0.625rem] font-medium\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuSub({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>) {\n  return <DropdownMenuPrimitive.Sub data-slot=\"dropdown-menu-sub\" {...props} />;\n}\n\nfunction DropdownMenuSubTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {\n  inset?: boolean;\n}) {\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      data-slot=\"dropdown-menu-sub-trigger\"\n      data-inset={inset}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8\",\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRightIcon\n        size={16}\n        className=\"text-muted-foreground/80 ml-auto\"\n      />\n    </DropdownMenuPrimitive.SubTrigger>\n  );\n}\n\nfunction DropdownMenuSubContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {\n  return (\n    <DropdownMenuPrimitive.SubContent\n      data-slot=\"dropdown-menu-sub-content\"\n      className={cn(\n        \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-40 overflow-hidden rounded-md border p-1 shadow-lg\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuPortal,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuTrigger,\n};\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/input.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport * as React from \"react\";\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"border-input file:text-foreground placeholder:text-muted-foreground/70 flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-sm shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        type === \"search\" &&\n          \"[&::-webkit-search-cancel-button]:appearance-none [&::-webkit-search-decoration]:appearance-none [&::-webkit-search-results-button]:appearance-none [&::-webkit-search-results-decoration]:appearance-none\",\n        type === \"file\" &&\n          \"text-muted-foreground/70 file:border-input file:text-foreground p-0 pr-3 italic file:me-3 file:h-full file:border-0 file:border-r file:border-solid file:bg-transparent file:px-3 file:text-sm file:font-medium file:not-italic\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Input };\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/label.tsx",
      "content": "\"use client\";\n\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"text-foreground text-sm leading-4 font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Label };\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/pagination.tsx",
      "content": "import {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  MoreHorizontalIcon,\n} from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button, buttonVariants } from \"@/components/ui/button\";\n\nfunction Pagination({ className, ...props }: React.ComponentProps<\"nav\">) {\n  return (\n    <nav\n      role=\"navigation\"\n      aria-label=\"pagination\"\n      data-slot=\"pagination\"\n      className={cn(\"mx-auto flex w-full justify-center\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction PaginationContent({\n  className,\n  ...props\n}: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"pagination-content\"\n      className={cn(\"flex flex-row items-center gap-1\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction PaginationItem({ ...props }: React.ComponentProps<\"li\">) {\n  return <li data-slot=\"pagination-item\" {...props} />;\n}\n\ntype PaginationLinkProps = {\n  isActive?: boolean;\n  isDisabled?: boolean;\n} & Pick<React.ComponentProps<typeof Button>, \"size\"> &\n  React.ComponentProps<\"a\">;\n\nfunction PaginationLink({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) {\n  return (\n    <a\n      aria-current={isActive ? \"page\" : undefined}\n      data-slot=\"pagination-link\"\n      data-active={isActive}\n      className={cn(\n        buttonVariants({\n          variant: isActive ? \"outline\" : \"ghost\",\n          size,\n        }),\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction PaginationPrevious({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) {\n  return (\n    <PaginationLink\n      aria-label=\"Go to previous page\"\n      size=\"default\"\n      className={cn(\"gap-1 px-2.5 sm:pe-4\", className)}\n      {...props}\n    >\n      <ChevronLeftIcon size={16} />\n      <span>Previous</span>\n    </PaginationLink>\n  );\n}\n\nfunction PaginationNext({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) {\n  return (\n    <PaginationLink\n      aria-label=\"Go to next page\"\n      size=\"default\"\n      className={cn(\"gap-1 px-2.5 sm:ps-4\", className)}\n      {...props}\n    >\n      <span>Next</span>\n      <ChevronRightIcon size={16} />\n    </PaginationLink>\n  );\n}\n\nfunction PaginationEllipsis({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      aria-hidden\n      data-slot=\"pagination-ellipsis\"\n      className={cn(\"flex size-9 items-center justify-center\", className)}\n      {...props}\n    >\n      <MoreHorizontalIcon size={16} />\n      <span className=\"sr-only\">More pages</span>\n    </span>\n  );\n}\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n};\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/radio-group.tsx",
      "content": "\"use client\";\n\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction RadioGroup({\n  className,\n  ...props\n}: React.ComponentProps<typeof RadioGroupPrimitive.Root>) {\n  return (\n    <RadioGroupPrimitive.Root\n      data-slot=\"radio-group\"\n      className={cn(\"grid gap-3\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction RadioGroupItem({\n  className,\n  ...props\n}: React.ComponentProps<typeof RadioGroupPrimitive.Item>) {\n  return (\n    <RadioGroupPrimitive.Item\n      data-slot=\"radio-group-item\"\n      className={cn(\n        \"border-input data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive aspect-square size-4 shrink-0 rounded-full border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className,\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center text-current\">\n        <svg\n          width=\"6\"\n          height=\"6\"\n          viewBox=\"0 0 6 6\"\n          fill=\"currentcolor\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <circle cx=\"3\" cy=\"3\" r=\"3\" />\n        </svg>\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  );\n}\n\nexport { RadioGroup, RadioGroupItem };\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/select.tsx",
      "content": "\"use client\";\n\nimport * as SelectPrimitive from \"@radix-ui/react-select\";\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />;\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />;\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />;\n}\n\nfunction SelectTrigger({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger>) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      className={cn(\n        \"border-input text-foreground data-[placeholder]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive flex h-9 w-full items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&>span]:line-clamp-1\",\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon\n          size={16}\n          className=\"text-muted-foreground/80 in-aria-invalid:text-destructive/80 shrink-0\"\n        />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  );\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"border-input bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-[min(24rem,var(--radix-select-content-available-height))] min-w-32 overflow-hidden rounded-md border shadow-lg [&_[role=group]]:py-1\",\n          position === \"popper\" &&\n            \"w-full min-w-[var(--radix-select-trigger-width)] data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className,\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" && \"h-[var(--radix-select-trigger-height)]\",\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  );\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\n        \"text-muted-foreground py-1.5 ps-8 pe-2 text-xs font-medium\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent/80 focus:text-accent-foreground relative flex w-full cursor-default items-center rounded-[6px] py-1.5 ps-8 pe-2 text-sm outline-hidden select-none data-disabled:pointer-events-none data-disabled:opacity-50\",\n        className,\n      )}\n      {...props}\n    >\n      <span className=\"absolute start-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"text-muted-foreground/80\" size={16} />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  );\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"text-muted-foreground/80 flex cursor-default items-center justify-center py-1\",\n        className,\n      )}\n      {...props}\n    >\n      <ChevronUpIcon size={16} />\n    </SelectPrimitive.ScrollUpButton>\n  );\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"text-muted-foreground/80 flex cursor-default items-center justify-center py-1\",\n        className,\n      )}\n      {...props}\n    >\n      <ChevronDownIcon size={16} />\n    </SelectPrimitive.ScrollDownButton>\n  );\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n};\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/separator.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Separator };\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/sheet.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\";\nimport { XIcon } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Sheet({ ...props }: React.ComponentProps<typeof SheetPrimitive.Root>) {\n  return <SheetPrimitive.Root data-slot=\"sheet\" {...props} />;\n}\n\nfunction SheetTrigger({\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Trigger>) {\n  return <SheetPrimitive.Trigger data-slot=\"sheet-trigger\" {...props} />;\n}\n\nfunction SheetClose({\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Close>) {\n  return <SheetPrimitive.Close data-slot=\"sheet-close\" {...props} />;\n}\n\nfunction SheetPortal({\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Portal>) {\n  return <SheetPrimitive.Portal data-slot=\"sheet-portal\" {...props} />;\n}\n\nfunction SheetOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Overlay>) {\n  return (\n    <SheetPrimitive.Overlay\n      data-slot=\"sheet-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/80\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction SheetContent({\n  className,\n  children,\n  side = \"right\",\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Content> & {\n  side?: \"top\" | \"right\" | \"bottom\" | \"left\";\n}) {\n  return (\n    <SheetPortal>\n      <SheetOverlay />\n      <SheetPrimitive.Content\n        data-slot=\"sheet-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out fixed z-50 flex flex-col gap-4 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n          side === \"right\" &&\n            \"data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right inset-y-0 right-0 h-full w-3/4 border-l sm:max-w-sm\",\n          side === \"left\" &&\n            \"data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left inset-y-0 left-0 h-full w-3/4 border-r sm:max-w-sm\",\n          side === \"top\" &&\n            \"data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top inset-x-0 top-0 h-auto border-b\",\n          side === \"bottom\" &&\n            \"data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom inset-x-0 bottom-0 h-auto border-t\",\n          className,\n        )}\n        {...props}\n      >\n        {children}\n        <SheetPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-secondary absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none\">\n          <XIcon className=\"size-4\" />\n          <span className=\"sr-only\">Close</span>\n        </SheetPrimitive.Close>\n      </SheetPrimitive.Content>\n    </SheetPortal>\n  );\n}\n\nfunction SheetHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sheet-header\"\n      className={cn(\"flex flex-col gap-1.5 p-4\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SheetFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sheet-footer\"\n      className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SheetTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Title>) {\n  return (\n    <SheetPrimitive.Title\n      data-slot=\"sheet-title\"\n      className={cn(\"text-foreground font-semibold\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SheetDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Description>) {\n  return (\n    <SheetPrimitive.Description\n      data-slot=\"sheet-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Sheet,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n};\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/sidebar.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { VariantProps, cva } from \"class-variance-authority\";\nimport { PanelLeftIcon } from \"lucide-react\";\n\nimport { useIsMobile } from \"@/hooks/use-mobile\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\";\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7;\nconst SIDEBAR_WIDTH = \"16rem\";\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\";\nconst SIDEBAR_WIDTH_ICON = \"3rem\";\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\";\n\ntype SidebarContext = {\n  state: \"expanded\" | \"collapsed\";\n  open: boolean;\n  setOpen: (open: boolean) => void;\n  openMobile: boolean;\n  setOpenMobile: (open: boolean) => void;\n  isMobile: boolean;\n  toggleSidebar: () => void;\n};\n\nconst SidebarContext = React.createContext<SidebarContext | null>(null);\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext);\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\");\n  }\n\n  return context;\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean;\n  open?: boolean;\n  onOpenChange?: (open: boolean) => void;\n}) {\n  const isMobile = useIsMobile();\n  const [openMobile, setOpenMobile] = React.useState(false);\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen);\n  const open = openProp ?? _open;\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value;\n      if (setOpenProp) {\n        setOpenProp(openState);\n      } else {\n        _setOpen(openState);\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`;\n    },\n    [setOpenProp, open],\n  );\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open);\n  }, [isMobile, setOpen, setOpenMobile]);\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault();\n        toggleSidebar();\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [toggleSidebar]);\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\";\n\n  const contextValue = React.useMemo<SidebarContext>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar],\n  );\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className,\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  );\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\";\n  variant?: \"sidebar\" | \"floating\" | \"inset\";\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\";\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar();\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-(--sidebar-width) flex-col\",\n          className,\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-(--sidebar-width) p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    );\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        className={cn(\n          \"relative w-(--sidebar-width) bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4)))]\"\n            : \"group-data-[collapsible=icon]:w-(--sidebar-width-icon)\",\n        )}\n      />\n      <div\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-(--sidebar-width) transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4))+2px)]\"\n            : \"group-data-[collapsible=icon]:w-(--sidebar-width-icon) group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className,\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar();\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event);\n        toggleSidebar();\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  );\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar();\n\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-sidebar relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\";\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  );\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:size-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean;\n  isActive?: boolean;\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>;\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\";\n  const { isMobile, state } = useSidebar();\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  );\n\n  if (!tooltip) {\n    return button;\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    };\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  );\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean;\n  showOnHover?: boolean;\n}) {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean;\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`;\n  }, []);\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-(--skeleton-width) flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  );\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean;\n  size?: \"sm\" | \"md\";\n  isActive?: boolean;\n}) {\n  const Comp = asChild ? Slot : \"a\";\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline-hidden focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n};\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/skeleton.tsx",
      "content": "import { cn } from \"@/lib/utils\";\n\nfunction Skeleton({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"skeleton\"\n      className={cn(\"bg-primary/10 animate-pulse rounded-md\", className)}\n      {...props}\n    />\n  );\n}\n\nexport { Skeleton };\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/switch.tsx",
      "content": "\"use client\";\n\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:ring-ring/50 inline-flex h-6 w-10 shrink-0 items-center rounded-full border-2 border-transparent transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className,\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background pointer-events-none block size-5 rounded-full ring-0 shadow-xs transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0 data-[state=checked]:rtl:-translate-x-4\",\n        )}\n      />\n    </SwitchPrimitive.Root>\n  );\n}\n\nexport { Switch };\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/table.tsx",
      "content": "import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div className=\"relative w-full overflow-auto\">\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  );\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead data-slot=\"table-header\" className={cn(className)} {...props} />\n  );\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-muted-foreground h-12 px-3 text-left align-middle font-medium has-[role=checkbox]:w-px [&:has([role=checkbox])]:pr-0\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-3 align-middle [&:has([role=checkbox])]:pr-0\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n};\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/tabs.tsx",
      "content": "\"use client\";\n\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground/70 inline-flex w-fit items-center justify-center rounded-md p-0.5\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"hover:text-muted-foreground data-[state=active]:bg-background data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 inline-flex items-center justify-center rounded-sm px-3 py-1.5 text-sm font-medium whitespace-nowrap transition-all outline-none focus-visible:ring-[3px] disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-xs [&_svg]:shrink-0\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  );\n}\n\nexport { Tabs, TabsContent, TabsList, TabsTrigger };\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/tooltip.tsx",
      "content": "\"use client\";\n\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction TooltipProvider({\n  delayDuration = 0,\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Provider>) {\n  return (\n    <TooltipPrimitive.Provider\n      data-slot=\"tooltip-provider\"\n      delayDuration={delayDuration}\n      {...props}\n    />\n  );\n}\n\nfunction Tooltip({\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Root>) {\n  return (\n    <TooltipProvider>\n      <TooltipPrimitive.Root data-slot=\"tooltip\" {...props} />\n    </TooltipProvider>\n  );\n}\n\nfunction TooltipTrigger({\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Trigger>) {\n  return <TooltipPrimitive.Trigger data-slot=\"tooltip-trigger\" {...props} />;\n}\n\nfunction TooltipContent({\n  className,\n  sideOffset = 4,\n  showArrow = false,\n  children,\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Content> & {\n  showArrow?: boolean;\n}) {\n  return (\n    <TooltipPrimitive.Portal>\n      <TooltipPrimitive.Content\n        data-slot=\"tooltip-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-w-70 rounded-md border px-3 py-1.5 text-sm\",\n          className,\n        )}\n        {...props}\n      >\n        {children}\n        {showArrow && (\n          <TooltipPrimitive.Arrow className=\"fill-popover -my-px drop-shadow-[0_1px_0_hsl(var(--border))]\" />\n        )}\n      </TooltipPrimitive.Content>\n    </TooltipPrimitive.Portal>\n  );\n}\n\nexport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger };\n",
      "type": "registry:component"
    },
    {
      "path": "hooks/use-mobile.ts",
      "content": "import * as React from \"react\";\n\nconst MOBILE_BREAKPOINT = 768;\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(\n    undefined,\n  );\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`);\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\n    };\n    mql.addEventListener(\"change\", onChange);\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\n    return () => mql.removeEventListener(\"change\", onChange);\n  }, []);\n\n  return !!isMobile;\n}\n",
      "type": "registry:hook"
    },
    {
      "path": "providers/theme-provider.tsx",
      "content": "\"use client\";\n\nimport {\n  ThemeProvider as NextThemesProvider,\n  type ThemeProviderProps,\n} from \"next-themes\";\n\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\n}\n",
      "type": "registry:file",
      "target": "providers/theme-provider.tsx"
    },
    {
      "path": "next.config.mjs",
      "content": "/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  assetPrefix: \"/exp4-static\",\n  transpilePackages: [\"@workspace/ui\"],\n  images: {\n    remotePatterns: [\n      {\n        protocol: 'https',\n        hostname: 'raw.githubusercontent.com',\n      },\n    ],    \n  },  \n}\n\nexport default nextConfig\n",
      "type": "registry:file",
      "target": "next.config.mjs"
    }
  ],
  "cssVars": {
    "theme": {
      "font-sans": "var(--font-sans), ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
      "font-mono": "var(--font-mono), ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace",
      "shadow-xs": "0 1px 1px rgba(0, 0, 0, 0.02), 0 1px 2px rgba(0, 0, 0, 0.05)",
      "shadow-sm": "0 1px 1px rgba(0, 0, 0, 0.03), 0 2px 2px rgba(0, 0, 0, 0.03), 0 2px 4px rgba(0, 0, 0, 0.03)",
      "shadow-md": "0 1px 1px rgba(0, 0, 0, 0.02), 0 2px 2px rgba(0, 0, 0, 0.02), 0 4px 4px rgba(0, 0, 0, 0.02), 0 8px 8px rgba(0, 0, 0, 0.02)",
      "shadow-lg": "0 1px 1px rgba(0, 0, 0, 0.02), 0 2px 2px rgba(0, 0, 0, 0.02), 0 4px 4px rgba(0, 0, 0, 0.02), 0 8px 8px rgba(0, 0, 0, 0.02), 0 16px 16px rgba(0, 0, 0, 0.02)",
      "shadow-xl": "0 1px 1px rgba(0, 0, 0, 0.02), 0 2px 2px rgba(0, 0, 0, 0.02), 0 4px 4px rgba(0, 0, 0, 0.02), 0 8px 8px rgba(0, 0, 0, 0.02), 0 16px 16px rgba(0, 0, 0, 0.02), 0 32px 32px rgba(0, 0, 0, 0.02)",
      "shadow-2xl": "0 1px 1px rgba(0, 0, 0, 0.02), 0 2px 2px rgba(0, 0, 0, 0.02), 0 4px 4px rgba(0, 0, 0, 0.02), 0 8px 8px rgba(0, 0, 0, 0.02), 0 16px 16px rgba(0, 0, 0, 0.02), 0 32px 32px rgba(0, 0, 0, 0.02), 0 64px 64px rgba(0, 0, 0, 0.02)"
    },
    "light": {
      "background": "oklch(1 0 0)",
      "foreground": "oklch(0.141 0.005 285.823)",
      "card": "oklch(1 0 0)",
      "card-foreground": "oklch(0.141 0.005 285.823)",
      "popover": "oklch(1 0 0)",
      "popover-foreground": "oklch(0.141 0.005 285.823)",
      "primary": "oklch(0.585 0.233 277.117)",
      "primary-to": "oklch(0.511 0.262 276.966)",
      "primary-foreground": "oklch(0.962 0.018 272.314)",
      "secondary": "oklch(0.967 0.001 286.375)",
      "secondary-foreground": "oklch(0.183 0.006 285.79)",
      "muted": "oklch(0.967 0.001 286.375)",
      "muted-foreground": "oklch(0.552 0.016 285.938)",
      "accent": "oklch(0.967 0.001 286.375)",
      "accent-foreground": "oklch(0.183 0.006 285.79)",
      "destructive": "oklch(0.637 0.237 25.331)",
      "destructive-foreground": "oklch(0.637 0.237 25.331)",
      "border": "oklch(0.92 0.004 286.32)",
      "input": "oklch(0.871 0.006 286.286)",
      "ring": "oklch(0.871 0.006 286.286)",
      "chart-1": "oklch(0.585 0.233 277.117)",
      "chart-2": "oklch(0.6 0.118 184.704)",
      "chart-3": "oklch(0.398 0.07 227.392)",
      "chart-4": "oklch(0.828 0.189 84.429)",
      "chart-5": "oklch(0.769 0.188 70.08)",
      "radius": "0.625rem",
      "sidebar": "oklch(0.956 0.002 286.35)",
      "sidebar-foreground": "oklch(0.37 0.013 285.805)",
      "sidebar-primary": "oklch(0.673 0.182 276.935)",
      "sidebar-primary-foreground": "oklch(0.985 0 0)",
      "sidebar-accent": "oklch(0.967 0.001 286.375)",
      "sidebar-accent-foreground": "oklch(0.21 0.006 285.885)",
      "sidebar-border": "oklch(0.92 0.004 286.32)",
      "sidebar-ring": "oklch(0.871 0.006 286.286)"
    },
    "dark": {
      "background": "oklch(0.183 0.006 285.79)",
      "foreground": "oklch(0.985 0 0)",
      "card": "oklch(0.37 0.013 285.805)",
      "card-foreground": "oklch(0.985 0 0)",
      "popover": "oklch(0.274 0.006 286.033)",
      "popover-foreground": "oklch(0.985 0 0)",
      "primary": "oklch(0.585 0.233 277.117)",
      "primary-to": "oklch(0.511 0.262 276.966)",
      "primary-foreground": "oklch(0.962 0.018 272.314)",
      "secondary": "oklch(0.274 0.006 286.033)",
      "secondary-foreground": "oklch(0.985 0 0)",
      "muted": "oklch(0.21 0.006 285.885)",
      "muted-foreground": "oklch(0.705 0.015 286.067)",
      "accent": "oklch(0.21 0.006 285.885)",
      "accent-foreground": "oklch(0.985 0 0)",
      "destructive": "oklch(0.637 0.237 25.331)",
      "destructive-foreground": "oklch(0.637 0.237 25.331)",
      "border": "oklch(0.246 0.009 285.69)",
      "input": "oklch(0.246 0.009 285.69)",
      "ring": "oklch(0.442 0.017 285.786)",
      "chart-1": "oklch(0.585 0.233 277.117)",
      "chart-2": "oklch(0.6 0.118 184.704)",
      "chart-3": "oklch(0.398 0.07 227.392)",
      "chart-4": "oklch(0.828 0.189 84.429)",
      "chart-5": "oklch(0.769 0.188 70.08)",
      "sidebar": "oklch(0.21 0.006 285.885)",
      "sidebar-foreground": "oklch(0.967 0.001 286.375)",
      "sidebar-primary": "oklch(0.673 0.182 276.935)",
      "sidebar-primary-foreground": "oklch(1 0 0)",
      "sidebar-accent": "oklch(0.274 0.006 286.033)",
      "sidebar-accent-foreground": "oklch(0.967 0.001 286.375)",
      "sidebar-border": "oklch(0.274 0.006 286.033)",
      "sidebar-ring": "oklch(0.442 0.017 285.786)"
    }
  }
}