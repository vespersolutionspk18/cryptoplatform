{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "experiment-07",
  "type": "registry:style",
  "dependencies": [
    "@radix-ui/react-dropdown-menu",
    "@radix-ui/react-separator",
    "@radix-ui/react-slot",
    "@remixicon/react",
    "@xyflow/react",
    "next-themes"
  ],
  "devDependencies": [
    "tw-animate-css"
  ],
  "files": [
    {
      "path": "app/layout.tsx",
      "content": "import { Inter, Geist_Mono } from \"next/font/google\";\nimport { ThemeProvider } from \"../providers/theme-provider\";\nimport \"./globals.css\";\n\nconst fontSans = Inter({\n  subsets: [\"latin\"],\n  variable: \"--font-sans\",\n});\n\nconst fontMono = Geist_Mono({\n  variable: \"--font-mono\",\n  subsets: [\"latin\"],\n});\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body\n        className={`${fontSans.variable} ${fontMono.variable} font-sans antialiased`}\n      >\n        <ThemeProvider\n          attribute=\"class\"\n          defaultTheme=\"system\"\n          enableSystem\n          disableTransitionOnChange\n        >\n          {children}\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/layout.tsx"
    },
    {
      "path": "app/page.tsx",
      "content": "import type { Metadata } from \"next\";\nimport Header from \"@/components/header\";\nimport SchemaVisualizer from \"@/components/schema-visualizer\";\nexport const metadata: Metadata = {\n  title: \"Experiment 07 - Crafted.is\",\n};\n\nexport default function Page() {\n  return (\n    <div className=\"min-h-svh flex flex-col\">\n      <Header />\n      <SchemaVisualizer />\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx"
    },
    {
      "path": "components/header.tsx",
      "content": "import Link from \"next/link\";\nimport Participants from \"@/components/participants\";\nimport TemplateSwitcher from \"@/components/template-switcher\";\nimport { Button } from \"@/components/ui/button\";\nimport { Separator } from \"@/components/ui/separator\";\nimport ThemeToggle from \"@/components/theme-toggle\";\n\nexport default function Header() {\n  return (\n    <header className=\"fixed top-2 md:top-5 w-full px-2 md:px-5 z-50\">\n      <div className=\"border border-border/80 rounded-xl bg-card/80 backdrop-blur-md h-12 md:h-16 flex justify-between items-center gap-2 px-4 shadow-lg/2\">\n        {/* Left area */}\n        <div className=\"flex-1 flex items-center\">\n          <Link className=\"inline-flex\" href=\"/\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"29\"\n              height=\"32\"\n              aria-label=\"Schema Visualizer\"\n            >\n              <path\n                fill=\"currentColor\"\n                d=\"M0 12v12.8h4.028a3.242 3.242 0 0 1 2.278.937A3.199 3.199 0 0 1 7.25 28v4h9.667L29 20V7.2h-4.028a3.242 3.242 0 0 1-2.278-.937A3.2 3.2 0 0 1 21.75 4V0h-9.667L0 12Zm13.694 12H8.056v-8.8l7.25-7.2h5.638v8.8l-7.25 7.2Z\"\n              />\n            </svg>\n          </Link>\n        </div>\n        {/* Center area */}\n        <div className=\"grow flex justify-center\">\n          <TemplateSwitcher />\n        </div>\n        {/* Right area */}\n        <div className=\"flex-1 flex justify-end items-center gap-4\">\n          <Participants />\n          <Button size=\"sm\" className=\"text-sm rounded-lg\">\n            Share\n          </Button>\n          <Separator orientation=\"vertical\" className=\"min-h-6 max-sm:hidden\" />\n          <ThemeToggle />\n        </div>\n      </div>\n    </header>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/participants.tsx",
      "content": "export default function Participants() {\n  return (\n    <div className=\"flex -space-x-[0.6rem] max-sm:hidden\">\n      <div className=\"size-8\">\n        <img\n          className=\"shrink-0 ring-background rounded-full ring-2\"\n          src=\"https://raw.githubusercontent.com/origin-space/origin-images/refs/heads/main/exp7/participant-01_fhwvxn.png\"\n          width={32}\n          height={32}\n          alt=\"Avatar 01\"\n        />\n      </div>\n      <div className=\"size-8\">\n        <img\n          className=\"shrink-0 ring-background rounded-full ring-2\"\n          src=\"https://raw.githubusercontent.com/origin-space/origin-images/refs/heads/main/exp7/participant-02_jl473r.png\"\n          width={32}\n          height={32}\n          alt=\"Avatar 02\"\n        />\n      </div>\n      <div className=\"size-8\">\n        <img\n          className=\"shrink-0 ring-background rounded-full ring-2\"\n          src=\"https://raw.githubusercontent.com/origin-space/origin-images/refs/heads/main/exp7/participant-03_dyfplu.png\"\n          width={32}\n          height={32}\n          alt=\"Avatar 03\"\n        />\n      </div>\n      <div className=\"size-8\">\n        <img\n          className=\"shrink-0 ring-background rounded-full ring-2\"\n          src=\"https://raw.githubusercontent.com/origin-space/origin-images/refs/heads/main/exp7/participant-04_mumzou.png\"\n          width={32}\n          height={32}\n          alt=\"Avatar 04\"\n        />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/schema-edge.tsx",
      "content": "import {\n  BaseEdge,\n  EdgeProps,\n  getSmoothStepPath,\n  Position,\n} from \"@xyflow/react\";\n\nexport default function SchemaEdge({\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  markerEnd,\n}: EdgeProps) {\n  const [edgePath] = getSmoothStepPath({\n    sourceX,\n    sourceY,\n    sourcePosition: sourcePosition || Position.Bottom,\n    targetX,\n    targetY,\n    targetPosition: targetPosition || Position.Top,\n    borderRadius: 8, // Increased border radius for smoother corners\n  });\n\n  return <BaseEdge path={edgePath} style={style} markerEnd={markerEnd} />;\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/schema-visualizer.tsx",
      "content": "\"use client\";\n\nimport { useCallback, useRef } from \"react\";\nimport {\n  ReactFlow,\n  ReactFlowProvider,\n  Background,\n  useNodesState,\n  useEdgesState,\n  Panel,\n  useReactFlow,\n  BackgroundVariant,\n} from \"@xyflow/react\";\nimport \"@xyflow/react/dist/base.css\";\nimport { RiAddLine, RiSubtractLine, RiFullscreenLine } from \"@remixicon/react\";\nimport { Button } from \"@/components/ui/button\";\nimport TableNode from \"@/components/table-node\";\nimport SchemaEdge from \"@/components/schema-edge\";\nimport { initialNodes, initialEdges } from \"@/lib/schema-data\";\n\n// Register custom node types and edge types\nconst nodeTypes = {\n  tableNode: TableNode,\n};\n\nconst edgeTypes = {\n  custom: SchemaEdge,\n};\n\nfunction SchemaVisualizerInner() {\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const reactFlowWrapper = useRef<HTMLDivElement>(null);\n  const { fitView, zoomIn, zoomOut } = useReactFlow();\n\n  const onFitView = useCallback(() => {\n    fitView({ padding: 0.2 });\n  }, [fitView]);\n\n  return (\n    <main className=\"flex-1 flex items-stretch\">\n      <div className=\"w-full\" ref={reactFlowWrapper}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          nodeTypes={nodeTypes}\n          edgeTypes={edgeTypes}\n          fitView\n          minZoom={0.5}\n          maxZoom={1}\n          defaultEdgeOptions={{\n            type: \"custom\",\n            className: \"opacity-25\",\n          }}\n          style={\n            {\n              \"--xy-background-pattern-dots-color-default\":\n                \"var(--color-border)\",\n              \"--xy-edge-stroke-width-default\": 1.5,\n              \"--xy-edge-stroke-default\": \"var(--color-foreground)\",\n              \"--xy-edge-stroke-selected-default\": \"var(--color-foreground)\",\n              \"--xy-attribution-background-color-default\": \"transparent\",\n            } as React.CSSProperties\n          }\n          attributionPosition=\"bottom-left\"\n        >\n          <Background variant={BackgroundVariant.Dots} gap={20} size={2} />\n\n          <Panel\n            position=\"bottom-right\"\n            className=\"inline-flex -space-x-px rounded-md shadow-xs rtl:space-x-reverse\"\n          >\n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              className=\"text-muted-foreground/80 hover:text-muted-foreground rounded-none shadow-none first:rounded-s-lg last:rounded-e-lg size-10 focus-visible:z-10 bg-card\"\n              onClick={() => zoomIn()}\n              aria-label=\"Zoom in\"\n            >\n              <RiAddLine className=\"size-5\" aria-hidden=\"true\" />\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              className=\"text-muted-foreground/80 hover:text-muted-foreground rounded-none shadow-none first:rounded-s-lg last:rounded-e-lg size-10 focus-visible:z-10 bg-card\"\n              onClick={() => zoomOut()}\n              aria-label=\"Zoom out\"\n            >\n              <RiSubtractLine className=\"size-5\" aria-hidden=\"true\" />\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              className=\"text-muted-foreground/80 hover:text-muted-foreground rounded-none shadow-none first:rounded-s-lg last:rounded-e-lg size-10 focus-visible:z-10 bg-card\"\n              onClick={onFitView}\n              aria-label=\"Fit view\"\n            >\n              <RiFullscreenLine className=\"size-5\" aria-hidden=\"true\" />\n            </Button>\n          </Panel>\n        </ReactFlow>\n      </div>\n    </main>\n  );\n}\n\nexport default function SchemaVisualizer() {\n  return (\n    <ReactFlowProvider>\n      <SchemaVisualizerInner />\n    </ReactFlowProvider>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/table-node.tsx",
      "content": "import { memo } from \"react\";\nimport { Handle, Position, type NodeProps, type Node } from \"@xyflow/react\";\nimport { Button } from \"@/components/ui/button\";\nimport { RiMore2Fill } from \"@remixicon/react\";\nimport { cn } from \"@/lib/utils\";\nimport { initialEdges } from \"@/lib/schema-data\";\n\nexport interface TableField {\n  name: string;\n  type: string;\n  isPrimary?: boolean;\n  isForeign?: boolean;\n}\n\ninterface TableNodeData extends Record<string, unknown> {\n  label: string;\n  fields: TableField[];\n  selected?: boolean;\n}\n\ntype TableNodeType = Node<TableNodeData, \"tableNode\">;\n\nfunction TableNode({ data, id }: NodeProps<TableNodeType>) {\n  // Find all source connections for this node\n  const sourceConnections = initialEdges\n    .filter((edge) => edge.source === id)\n    .map((edge) => edge.sourceHandle);\n\n  // Find all target connections for this node\n  const targetConnections = initialEdges\n    .filter((edge) => edge.target === id)\n    .map((edge) => edge.targetHandle);\n\n  return (\n    <div\n      className={cn(\n        \"rounded-xl bg-card shadow-[0_1px_1px_rgba(0,0,0,0.02),_0_2px_2px_rgba(0,0,0,0.02),_0_4px_4px_rgba(0,0,0,0.02),_0_8px_8px_rgba(0,0,0,0.02),_0_16px_16px_rgba(0,0,0,0.02),_0_32px_32px_rgba(0,0,0,0.02)] w-66 font-mono\",\n        data.selected ? \"ring-2 ring-primary ring-offset-2\" : \"\",\n      )}\n    >\n      <div className=\"flex items-center justify-between px-4 py-3 border-b border-border/80 bg-gradient-to-t from-background/70 dark:from-background/30\">\n        <div className=\"text-[13px]\">\n          <span className=\"text-muted-foreground/80\">/</span>{\" \"}\n          <span className=\"font-medium\">{data.label}</span>\n        </div>\n        <Button\n          size=\"icon\"\n          variant=\"ghost\"\n          className=\"shadow-none hover:bg-transparent -my-2 -me-2 text-muted-foreground/60 hover:text-muted-foreground\"\n          aria-label=\"Open edit menu\"\n        >\n          <RiMore2Fill className=\"size-5\" aria-hidden=\"true\" />\n        </Button>\n      </div>\n      <div className=\"text-xs py-2\">\n        {data.fields.map((field: TableField) => (\n          <div key={field.name} className=\"px-4 relative group\">\n            <div className=\"flex items-center justify-between gap-2 py-2 border-dashed group-not-last:border-b\">\n              <span className=\"truncate font-medium\">{field.name}</span>\n              <span className=\"text-muted-foreground/60\">{field.type}</span>\n\n              {/* Field handles */}\n              {((field.isPrimary && sourceConnections.includes(field.name)) ||\n                (field.isForeign &&\n                  targetConnections.includes(field.name))) && (\n                <Handle\n                  type={field.isPrimary ? \"source\" : \"target\"}\n                  position={field.isPrimary ? Position.Left : Position.Right}\n                  id={field.name}\n                  className=\"size-2.5 rounded-full bg-foreground! border-2 border-background\"\n                  isConnectable={false}\n                />\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(TableNode);\n",
      "type": "registry:component"
    },
    {
      "path": "components/template-switcher.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { ChevronDownIcon } from \"lucide-react\";\n\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbSeparator,\n} from \"@/components/ui/breadcrumb\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuRadioGroup,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\n\nconst templates = [\n  {\n    name: \"Schema-Visualizer\",\n    href: \"/templates/schema-visualizer\",\n  },\n  {\n    name: \"Component-Explorer\",\n    href: \"/templates/component-explorer\",\n  },\n  {\n    name: \"Dashboard-Builder\",\n    href: \"/templates/dashboard-builder\",\n  },\n  {\n    name: \"Form-Generator\",\n    href: \"/templates/form-generator\",\n  },\n];\n\nexport default function TemplateSwitcher() {\n  const [activeTemplate, setActiveTemplate] = useState(templates[0] ?? null);\n\n  return (\n    <Breadcrumb>\n      <BreadcrumbList>\n        <BreadcrumbItem className=\"max-sm:hidden\">\n          <BreadcrumbLink href=\"#\">Templates</BreadcrumbLink>\n        </BreadcrumbItem>\n        <BreadcrumbSeparator className=\"text-border max-sm:hidden\">\n          {\" \"}\n          /{\" \"}\n        </BreadcrumbSeparator>\n        <BreadcrumbItem>\n          <DropdownMenu>\n            <DropdownMenuTrigger className=\"flex items-center gap-1 font-medium text-foreground\">\n              {activeTemplate?.name ?? \"Select Template\"}\n              <ChevronDownIcon\n                className=\"-me-1 opacity-60\"\n                size={16}\n                aria-hidden=\"true\"\n              />\n            </DropdownMenuTrigger>\n            <DropdownMenuContent sideOffset={10}>\n              {templates.map((template) => (\n                <DropdownMenuItem\n                  key={template.name}\n                  onClick={() => setActiveTemplate(template)}\n                >\n                  {template.name}\n                </DropdownMenuItem>\n              ))}\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </BreadcrumbItem>\n      </BreadcrumbList>\n    </Breadcrumb>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/theme-toggle.tsx",
      "content": "\"use client\";\n\nimport { RiMoonClearLine, RiSunLine } from \"@remixicon/react\";\nimport { useTheme } from \"next-themes\";\nimport { useId, useState } from \"react\";\n\nexport default function ThemeToggle() {\n  const id = useId();\n  const { theme, setTheme } = useTheme();\n  const [system, setSystem] = useState(false);\n\n  const smartToggle = () => {\n    const prefersDarkScheme = window.matchMedia(\n      \"(prefers-color-scheme: dark)\",\n    ).matches;\n    if (theme === \"system\") {\n      setTheme(prefersDarkScheme ? \"light\" : \"dark\");\n      setSystem(false);\n    } else if (\n      (theme === \"light\" && !prefersDarkScheme) ||\n      (theme === \"dark\" && prefersDarkScheme)\n    ) {\n      setTheme(theme === \"light\" ? \"dark\" : \"light\");\n      setSystem(false);\n    } else {\n      setTheme(\"system\");\n      setSystem(true);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col justify-center\">\n      <input\n        type=\"checkbox\"\n        name=\"theme-toggle\"\n        id={id}\n        className=\"peer sr-only\"\n        checked={system}\n        onChange={smartToggle}\n        aria-label=\"Toggle dark mode\"\n      />\n      <label\n        className=\"text-muted-foreground/80 hover:text-muted-foreground rounded peer-focus-visible:border-ring peer-focus-visible:ring-ring/50 relative inline-flex size-8 cursor-pointer items-center justify-center transition-[color,box-shadow] outline-none peer-focus-visible:ring-[3px]\"\n        htmlFor={id}\n        aria-hidden=\"true\"\n      >\n        <RiSunLine className=\"dark:hidden\" size={22} aria-hidden=\"true\" />\n        <RiMoonClearLine\n          className=\"hidden dark:block\"\n          size={22}\n          aria-hidden=\"true\"\n        />\n        <span className=\"sr-only\">Switch to system/light/dark version</span>\n      </label>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/breadcrumb.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { ChevronRightIcon, MoreHorizontal } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Breadcrumb({ ...props }: React.ComponentProps<\"nav\">) {\n  return <nav aria-label=\"breadcrumb\" data-slot=\"breadcrumb\" {...props} />;\n}\n\nfunction BreadcrumbList({ className, ...props }: React.ComponentProps<\"ol\">) {\n  return (\n    <ol\n      data-slot=\"breadcrumb-list\"\n      className={cn(\n        \"text-muted-foreground flex flex-wrap items-center gap-1.5 text-sm break-words sm:gap-2.5\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction BreadcrumbItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"breadcrumb-item\"\n      className={cn(\"inline-flex items-center gap-1.5\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction BreadcrumbLink({\n  asChild,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean;\n}) {\n  const Comp = asChild ? Slot : \"a\";\n\n  return (\n    <Comp\n      data-slot=\"breadcrumb-link\"\n      className={cn(\"hover:text-foreground transition-colors\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction BreadcrumbPage({ className, ...props }: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"breadcrumb-page\"\n      role=\"link\"\n      aria-disabled=\"true\"\n      aria-current=\"page\"\n      className={cn(\"text-foreground font-normal\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction BreadcrumbSeparator({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"breadcrumb-separator\"\n      role=\"presentation\"\n      aria-hidden=\"true\"\n      className={className}\n      {...props}\n    >\n      {children ?? <ChevronRightIcon size={16} />}\n    </li>\n  );\n}\n\nfunction BreadcrumbEllipsis({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"breadcrumb-ellipsis\"\n      role=\"presentation\"\n      aria-hidden=\"true\"\n      className={cn(\"flex size-5 items-center justify-center\", className)}\n      {...props}\n    >\n      <MoreHorizontal size={16} />\n      <span className=\"sr-only\">More</span>\n    </span>\n  );\n}\n\nexport {\n  Breadcrumb,\n  BreadcrumbEllipsis,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n};\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-sm hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\n        outline:\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean;\n  }) {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  );\n}\n\nexport { Button, buttonVariants };\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/dropdown-menu.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\";\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\ntype PointerDownEvent = Parameters<\n  NonNullable<DropdownMenuPrimitive.DropdownMenuContentProps[\"onPointerDown\"]>\n>[0];\ntype PointerDownOutsideEvent = Parameters<\n  NonNullable<\n    DropdownMenuPrimitive.DropdownMenuContentProps[\"onPointerDownOutside\"]\n  >\n>[0];\n\nfunction DropdownMenu({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {\n  return <DropdownMenuPrimitive.Root data-slot=\"dropdown-menu\" {...props} />;\n}\n\nfunction DropdownMenuPortal({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {\n  return (\n    <DropdownMenuPrimitive.Portal data-slot=\"dropdown-menu-portal\" {...props} />\n  );\n}\n\nfunction DropdownMenuTrigger({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>) {\n  return (\n    <DropdownMenuPrimitive.Trigger\n      data-slot=\"dropdown-menu-trigger\"\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuContent({\n  className,\n  sideOffset = 4,\n  onPointerDown,\n  onPointerDownOutside,\n  onCloseAutoFocus,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {\n  const isCloseFromMouse = React.useRef<boolean>(false);\n\n  const handlePointerDown = React.useCallback(\n    (e: PointerDownEvent) => {\n      isCloseFromMouse.current = true;\n      onPointerDown?.(e);\n    },\n    [onPointerDown],\n  );\n\n  const handlePointerDownOutside = React.useCallback(\n    (e: PointerDownOutsideEvent) => {\n      isCloseFromMouse.current = true;\n      onPointerDownOutside?.(e);\n    },\n    [onPointerDownOutside],\n  );\n\n  const handleCloseAutoFocus = React.useCallback(\n    (e: Event) => {\n      if (onCloseAutoFocus) {\n        return onCloseAutoFocus(e);\n      }\n\n      if (!isCloseFromMouse.current) {\n        return;\n      }\n\n      e.preventDefault();\n      isCloseFromMouse.current = false;\n    },\n    [onCloseAutoFocus],\n  );\n\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.Content\n        data-slot=\"dropdown-menu-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-40 overflow-hidden rounded-md border p-1 shadow-lg\",\n          className,\n        )}\n        onPointerDown={handlePointerDown}\n        onPointerDownOutside={handlePointerDownOutside}\n        onCloseAutoFocus={handleCloseAutoFocus}\n        {...props}\n      />\n    </DropdownMenuPrimitive.Portal>\n  );\n}\n\nfunction DropdownMenuGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Group>) {\n  return (\n    <DropdownMenuPrimitive.Group data-slot=\"dropdown-menu-group\" {...props} />\n  );\n}\n\nfunction DropdownMenuItem({\n  className,\n  inset,\n  variant = \"default\",\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {\n  inset?: boolean;\n  variant?: \"default\" | \"destructive\";\n}) {\n  return (\n    <DropdownMenuPrimitive.Item\n      data-slot=\"dropdown-menu-item\"\n      data-inset={inset}\n      data-variant={variant}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive-foreground data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/40 data-[variant=destructive]:focus:text-destructive-foreground data-[variant=destructive]:*:[svg]:!text-destructive-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) {\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      data-slot=\"dropdown-menu-checkbox-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0\",\n        className,\n      )}\n      checked={checked}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CheckIcon size={16} />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  );\n}\n\nfunction DropdownMenuRadioGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>) {\n  return (\n    <DropdownMenuPrimitive.RadioGroup\n      data-slot=\"dropdown-menu-radio-group\"\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuRadioItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) {\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      data-slot=\"dropdown-menu-radio-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0\",\n        className,\n      )}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CircleIcon className=\"size-2 fill-current\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.RadioItem>\n  );\n}\n\nfunction DropdownMenuLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {\n  inset?: boolean;\n}) {\n  return (\n    <DropdownMenuPrimitive.Label\n      data-slot=\"dropdown-menu-label\"\n      data-inset={inset}\n      className={cn(\n        \"text-muted-foreground px-2 py-1.5 text-xs font-medium data-[inset]:pl-8\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) {\n  return (\n    <DropdownMenuPrimitive.Separator\n      data-slot=\"dropdown-menu-separator\"\n      className={cn(\"bg-border -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuShortcut({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <kbd\n      data-slot=\"dropdown-menu-shortcut\"\n      className={cn(\n        \"bg-background text-muted-foreground/70 ms-auto -me-1 inline-flex h-5 max-h-full items-center rounded border px-1 font-[inherit] text-[0.625rem] font-medium\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuSub({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>) {\n  return <DropdownMenuPrimitive.Sub data-slot=\"dropdown-menu-sub\" {...props} />;\n}\n\nfunction DropdownMenuSubTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {\n  inset?: boolean;\n}) {\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      data-slot=\"dropdown-menu-sub-trigger\"\n      data-inset={inset}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8\",\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRightIcon\n        size={16}\n        className=\"text-muted-foreground/80 ml-auto\"\n      />\n    </DropdownMenuPrimitive.SubTrigger>\n  );\n}\n\nfunction DropdownMenuSubContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {\n  return (\n    <DropdownMenuPrimitive.SubContent\n      data-slot=\"dropdown-menu-sub-content\"\n      className={cn(\n        \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-40 overflow-hidden rounded-md border p-1 shadow-lg\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuPortal,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuTrigger,\n};\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/separator.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Separator };\n",
      "type": "registry:component"
    },
    {
      "path": "lib/schema-data.ts",
      "content": "import type { Node, Edge } from \"@xyflow/react\";\n\n// Define the initial nodes (tables)\nexport const initialNodes: Node[] = [\n  {\n    id: \"users\",\n    type: \"tableNode\",\n    position: { x: 800, y: 150 },\n    data: {\n      label: \"users\",\n      fields: [\n        { name: \"id\", type: \"int\", isPrimary: true },\n        { name: \"full_name\", type: \"varchar\" },\n        { name: \"email\", type: \"varchar\" },\n        { name: \"gender\", type: \"varchar\" },\n        { name: \"date_of_birth\", type: \"date\" },\n        { name: \"country_code\", type: \"varchar\", isForeign: true },\n        { name: \"created_at\", type: \"timestamp\" },\n      ],\n    },\n  },\n  {\n    id: \"orders\",\n    type: \"tableNode\",\n    position: { x: 450, y: 183 },\n    data: {\n      label: \"orders\",\n      fields: [\n        { name: \"id\", type: \"int\", isPrimary: true },\n        { name: \"user_id\", type: \"int\", isForeign: true },\n        { name: \"status\", type: \"varchar\" },\n        { name: \"total_amount\", type: \"decimal\" },\n        { name: \"created_at\", type: \"timestamp\" },\n      ],\n    },\n  },\n  {\n    id: \"order_items\",\n    type: \"tableNode\",\n    position: { x: 100, y: 150 },\n    data: {\n      label: \"order_items\",\n      fields: [\n        { name: \"id\", type: \"int\", isPrimary: true },\n        { name: \"order_id\", type: \"int\", isForeign: true },\n        { name: \"product_id\", type: \"int\", isForeign: true },\n        { name: \"quantity\", type: \"int\" },\n        { name: \"unit_price\", type: \"decimal\" },\n      ],\n    },\n  },\n  {\n    id: \"products\",\n    type: \"tableNode\",\n    position: { x: 100, y: 460 },\n    data: {\n      label: \"products\",\n      fields: [\n        { name: \"id\", type: \"int\", isPrimary: true },\n        { name: \"merchant_id\", type: \"int\", isForeign: true },\n        { name: \"name\", type: \"varchar\" },\n        { name: \"description\", type: \"text\" },\n        { name: \"price\", type: \"decimal\" },\n        { name: \"status\", type: \"varchar\" },\n        { name: \"created_at\", type: \"timestamp\" },\n      ],\n    },\n  },\n  {\n    id: \"merchants\",\n    type: \"tableNode\",\n    position: { x: 450, y: 493 },\n    data: {\n      label: \"merchants\",\n      fields: [\n        { name: \"id\", type: \"int\", isPrimary: true },\n        { name: \"name\", type: \"varchar\" },\n        { name: \"email\", type: \"varchar\" },\n        { name: \"country_code\", type: \"varchar\", isForeign: true },\n        { name: \"created_at\", type: \"timestamp\" },\n      ],\n    },\n  },\n  {\n    id: \"countries\",\n    type: \"tableNode\",\n    position: { x: 800, y: 570 },\n    data: {\n      label: \"countries\",\n      fields: [\n        { name: \"code\", type: \"varchar\", isPrimary: true },\n        { name: \"name\", type: \"varchar\" },\n        { name: \"continent_name\", type: \"varchar\" },\n        { name: \"currency\", type: \"varchar\" },\n      ],\n    },\n  },\n];\n\n// Define the edges (relationships) between tables with specific column connections\nexport const initialEdges: Edge[] = [\n  // User to Orders (one-to-many): users.id -> orders.user_id\n  {\n    id: \"users-orders\",\n    source: \"users\",\n    target: \"orders\",\n    sourceHandle: \"id\",\n    targetHandle: \"user_id\",\n  },\n  // Orders to Order Items (one-to-many): orders.id -> order_items.order_id\n  {\n    id: \"orders-order_items\",\n    source: \"orders\",\n    target: \"order_items\",\n    sourceHandle: \"id\",\n    targetHandle: \"order_id\",\n  },\n  // Products to Order Items (one-to-many): products.id -> order_items.product_id\n  {\n    id: \"products-order_items\",\n    source: \"products\",\n    target: \"order_items\",\n    sourceHandle: \"id\",\n    targetHandle: \"product_id\",\n  },\n  // Merchants to Products (one-to-many): merchants.id -> products.merchant_id\n  {\n    id: \"merchants-products\",\n    source: \"merchants\",\n    target: \"products\",\n    sourceHandle: \"id\",\n    targetHandle: \"merchant_id\",\n  },\n  // Countries to Users (one-to-many): countries.code -> users.country_code\n  {\n    id: \"countries-users\",\n    source: \"countries\",\n    target: \"users\",\n    sourceHandle: \"code\",\n    targetHandle: \"country_code\",\n  },\n  // Countries to Merchants (one-to-many): countries.code -> merchants.country_code\n  {\n    id: \"countries-merchants\",\n    source: \"countries\",\n    target: \"merchants\",\n    sourceHandle: \"code\",\n    targetHandle: \"country_code\",\n  },\n];\n",
      "type": "registry:file",
      "target": "lib/schema-data.ts"
    },
    {
      "path": "providers/theme-provider.tsx",
      "content": "\"use client\";\n\nimport {\n  ThemeProvider as NextThemesProvider,\n  type ThemeProviderProps,\n} from \"next-themes\";\n\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\n}\n",
      "type": "registry:file",
      "target": "providers/theme-provider.tsx"
    },
    {
      "path": "next.config.mjs",
      "content": "/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  assetPrefix: \"/exp7-static\",\n  transpilePackages: [\"@workspace/ui\"],\n  images: {\n    remotePatterns: [\n      {\n        protocol: 'https',\n        hostname: 'raw.githubusercontent.com',\n      },\n    ],    \n  },  \n}\n\nexport default nextConfig\n",
      "type": "registry:file",
      "target": "next.config.mjs"
    }
  ],
  "cssVars": {
    "theme": {
      "font-sans": "var(--font-sans), ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
      "font-mono": "var(--font-mono), ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace"
    },
    "light": {
      "background": "oklch(0.967 0.001 286.375)",
      "foreground": "oklch(0.141 0.005 285.823)",
      "card": "oklch(1 0 0)",
      "card-foreground": "oklch(0.141 0.005 285.823)",
      "popover": "oklch(1 0 0)",
      "popover-foreground": "oklch(0.141 0.005 285.823)",
      "primary": "oklch(0.21 0.006 285.885)",
      "primary-foreground": "oklch(0.985 0 0)",
      "secondary": "oklch(0.967 0.001 286.375)",
      "secondary-foreground": "oklch(0.21 0.006 285.885)",
      "muted": "oklch(0.967 0.001 286.375)",
      "muted-foreground": "oklch(0.552 0.016 285.938)",
      "accent": "oklch(0.967 0.001 286.375)",
      "accent-foreground": "oklch(0.21 0.006 285.885)",
      "destructive": "oklch(0.577 0.245 27.325)",
      "destructive-foreground": "oklch(0.577 0.245 27.325)",
      "border": "oklch(0.92 0.004 286.32)",
      "input": "oklch(0.92 0.004 286.32)",
      "ring": "oklch(0.705 0.015 286.067)",
      "chart-1": "oklch(0.646 0.222 41.116)",
      "chart-2": "oklch(0.6 0.118 184.704)",
      "chart-3": "oklch(0.398 0.07 227.392)",
      "chart-4": "oklch(0.828 0.189 84.429)",
      "chart-5": "oklch(0.769 0.188 70.08)",
      "chart-6": "oklch(0.696 0.17 162.48)",
      "radius": "0.5rem",
      "sidebar": "oklch(0.985 0 0)",
      "sidebar-foreground": "oklch(0.141 0.005 285.823)",
      "sidebar-primary": "oklch(0.21 0.006 285.885)",
      "sidebar-primary-foreground": "oklch(0.985 0 0)",
      "sidebar-accent": "oklch(0.967 0.001 286.375)",
      "sidebar-accent-foreground": "oklch(0.21 0.006 285.885)",
      "sidebar-border": "oklch(0.92 0.004 286.32)",
      "sidebar-ring": "oklch(0.705 0.015 286.067)"
    },
    "dark": {
      "background": "oklch(0.141 0.005 285.823)",
      "foreground": "oklch(0.985 0 0)",
      "card": "oklch(0.274 0.006 286.033)",
      "card-foreground": "oklch(0.985 0 0)",
      "popover": "oklch(0.21 0.006 285.885)",
      "popover-foreground": "oklch(0.985 0 0)",
      "primary": "oklch(0.92 0.004 286.32)",
      "primary-foreground": "oklch(0.21 0.006 285.885)",
      "secondary": "oklch(0.274 0.006 286.033)",
      "secondary-foreground": "oklch(0.985 0 0)",
      "muted": "oklch(0.274 0.006 286.033)",
      "muted-foreground": "oklch(0.705 0.015 286.067)",
      "accent": "oklch(0.274 0.006 286.033)",
      "accent-foreground": "oklch(0.985 0 0)",
      "destructive": "oklch(0.704 0.191 22.216)",
      "destructive-foreground": "oklch(0.704 0.191 22.216)",
      "border": "oklch(1 0 0 / 10%)",
      "input": "oklch(1 0 0 / 15%)",
      "ring": "oklch(0.552 0.016 285.938)",
      "chart-1": "oklch(0.488 0.243 264.376)",
      "chart-2": "oklch(0.696 0.17 162.48)",
      "chart-3": "oklch(0.769 0.188 70.08)",
      "chart-4": "oklch(0.627 0.265 303.9)",
      "chart-5": "oklch(0.645 0.246 16.439)",
      "chart-6": "oklch(0.696 0.17 162.48)",
      "radius": "0.5rem",
      "sidebar": "oklch(0.21 0.006 285.885)",
      "sidebar-foreground": "oklch(0.985 0 0)",
      "sidebar-primary": "oklch(0.488 0.243 264.376)",
      "sidebar-primary-foreground": "oklch(0.985 0 0)",
      "sidebar-accent": "oklch(0.274 0.006 286.033)",
      "sidebar-accent-foreground": "oklch(0.985 0 0)",
      "sidebar-border": "oklch(1 0 0 / 10%)",
      "sidebar-ring": "oklch(0.552 0.016 285.938)"
    }
  }
}